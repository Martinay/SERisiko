package GameLogic;

import java.awt.*;



class spielfeld_data {
	
	static Spielwelt init_spielwelt_europa(Spieler[] spieler){
		
		int[] verteilung = new int[spieler.length];
		for (int i=0; i<spieler.length; i++){
			verteilung[i]=0;			
		}
		
		Land[] laender= new Land[38];
		
		// Laender laden
//
//		laender[0]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Russland");
//		laender[1]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Finnland");
//		laender[2]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Schweden");
//		laender[3]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Norwegen");
//		laender[4]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Ukraine");
//		laender[5]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Italien");
//		laender[6]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Frankreich");
//		laender[7]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Spanien");
//		laender[8]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Grichenland");
//		laender[9]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Deutschland");
//		laender[10]=new Land(auswahl_zufall_spieler(spieler,verteilung), "D�nemark");
//		laender[11]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Bosnien");
//		laender[12]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Kroatien");
//		laender[13]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Serbien");
//		laender[14]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Bulgaria");
//		laender[15]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Rum�nien");
//		laender[16]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Moldavien");
//		laender[17]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Montenegro");
//		laender[18]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Mazedonien");
//		laender[19]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Portugal");
//		laender[20]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Slovenien");
//		laender[21]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Ungarn");
//		laender[22]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Slovakai");
//		laender[23]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Tschechen");
//		laender[24]=new Land(auswahl_zufall_spieler(spieler,verteilung), "�sterreich");
//		laender[25]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Schweiz");
//		laender[26]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Polen");
//		laender[27]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Wei�russland");
//		laender[28]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Estland");
//		laender[29]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Lettland");
//		laender[30]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Litauen");
//		laender[31]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Niederlande");
//		laender[32]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Belgien");
//		laender[33]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Gro�britannien");
//		laender[34]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Irland");
//		laender[35]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Island");
//		laender[36]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Albanien");
//		laender[37]=new Land(auswahl_zufall_spieler(spieler,verteilung), "Kaliningrad");
		
		setze_nachbar_laender(laender);
		
		Spielwelt dieSpielwelt = new Spielwelt(laender);
		
		return dieSpielwelt;
	}
	
	static Spieler auswahl_zufall_spieler(Spieler[] spieler, int[] verteilung){
		int merk=10000;
		int pos=0;
		
		for (int i=0; i<verteilung.length; i++){
			
			if (verteilung[i]==merk){
				if (((int)(Math.random()*2))==1){
					pos=i;
					merk=verteilung[i];
				}
			}
			
			if (verteilung[i]<merk){
				pos=i;
				merk=verteilung[i];
			}
		}
		verteilung[pos]++;
		return spieler[pos];
	}
	
	
	static void setze_nachbar_laender(Land[] laender){
		Land[] angrenzende_laender;
		
		//Russland
			angrenzende_laender = new Land[6];
			angrenzende_laender[0]=laender[3];
			angrenzende_laender[1]=laender[1];
			angrenzende_laender[2]=laender[28];
			angrenzende_laender[3]=laender[29];
			angrenzende_laender[4]=laender[27];
			angrenzende_laender[5]=laender[4];
			laender[0].setze_angrenzende_Laender(angrenzende_laender);
			
		//Finnland
			angrenzende_laender = new Land[3];
			angrenzende_laender[0]=laender[3];
			angrenzende_laender[1]=laender[2];
			angrenzende_laender[2]=laender[0];
			laender[1].setze_angrenzende_Laender(angrenzende_laender);
			
		//Schweden
			angrenzende_laender = new Land[3];
			angrenzende_laender[0]=laender[3];
			angrenzende_laender[1]=laender[1];
			angrenzende_laender[2]=laender[10];
			laender[2].setze_angrenzende_Laender(angrenzende_laender);
			
		//Norwegen
			angrenzende_laender = new Land[3];
			angrenzende_laender[0]=laender[0];
			angrenzende_laender[1]=laender[1];
			angrenzende_laender[2]=laender[2];
			laender[3].setze_angrenzende_Laender(angrenzende_laender);
			
		//Ukraine
			angrenzende_laender = new Land[7];
			angrenzende_laender[0]=laender[0];
			angrenzende_laender[1]=laender[16];
			angrenzende_laender[2]=laender[15];
			angrenzende_laender[3]=laender[21];
			angrenzende_laender[4]=laender[22];
			angrenzende_laender[5]=laender[26];
			angrenzende_laender[6]=laender[27];
			laender[4].setze_angrenzende_Laender(angrenzende_laender);
			
		//Italien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[20];
			angrenzende_laender[1]=laender[24];
			angrenzende_laender[2]=laender[25];
			angrenzende_laender[3]=laender[6];
			laender[5].setze_angrenzende_Laender(angrenzende_laender);
			
		//Frankreich
			angrenzende_laender = new Land[6];
			angrenzende_laender[0]=laender[7];
			angrenzende_laender[1]=laender[5];
			angrenzende_laender[2]=laender[25];
			angrenzende_laender[3]=laender[9];
			angrenzende_laender[4]=laender[32];
			angrenzende_laender[5]=laender[33];
			laender[6].setze_angrenzende_Laender(angrenzende_laender);
			
		//Spanien
			angrenzende_laender = new Land[2];
			angrenzende_laender[0]=laender[6];
			angrenzende_laender[1]=laender[19];
			laender[7].setze_angrenzende_Laender(angrenzende_laender);
			
		//Griechenland
			angrenzende_laender = new Land[3];
			angrenzende_laender[0]=laender[36];
			angrenzende_laender[1]=laender[18];
			angrenzende_laender[2]=laender[14];
			laender[8].setze_angrenzende_Laender(angrenzende_laender);
			
		//Deutschland
			angrenzende_laender = new Land[8];
			angrenzende_laender[0]=laender[26];
			angrenzende_laender[1]=laender[23];
			angrenzende_laender[2]=laender[24];
			angrenzende_laender[3]=laender[25];
			angrenzende_laender[4]=laender[6];
			angrenzende_laender[5]=laender[31];
			angrenzende_laender[6]=laender[32];
			angrenzende_laender[7]=laender[10];
			laender[9].setze_angrenzende_Laender(angrenzende_laender);
			
		//Daenemark
			angrenzende_laender = new Land[2];
			angrenzende_laender[0]=laender[9];
			angrenzende_laender[1]=laender[1];
			laender[10].setze_angrenzende_Laender(angrenzende_laender);
			
		//Bosnien
			angrenzende_laender = new Land[3];
			angrenzende_laender[0]=laender[17];
			angrenzende_laender[1]=laender[13];
			angrenzende_laender[2]=laender[12];
			laender[11].setze_angrenzende_Laender(angrenzende_laender);
			
		//Kroatien
			angrenzende_laender = new Land[5];
			angrenzende_laender[0]=laender[17];
			angrenzende_laender[1]=laender[11];
			angrenzende_laender[2]=laender[13];
			angrenzende_laender[3]=laender[21];
			angrenzende_laender[4]=laender[20];
			laender[12].setze_angrenzende_Laender(angrenzende_laender);
			
		//Serbien
			angrenzende_laender = new Land[8];
			angrenzende_laender[0]=laender[15];
			angrenzende_laender[1]=laender[14];
			angrenzende_laender[2]=laender[18];
			angrenzende_laender[3]=laender[36];
			angrenzende_laender[4]=laender[17];
			angrenzende_laender[5]=laender[11];
			angrenzende_laender[6]=laender[12];
			angrenzende_laender[7]=laender[21];
			laender[13].setze_angrenzende_Laender(angrenzende_laender);
			
		//Bulgarien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[8];
			angrenzende_laender[1]=laender[18];
			angrenzende_laender[2]=laender[13];
			angrenzende_laender[3]=laender[15];
			laender[14].setze_angrenzende_Laender(angrenzende_laender);
			
		//Rumaenien
			angrenzende_laender = new Land[5];
			angrenzende_laender[0]=laender[14];
			angrenzende_laender[1]=laender[13];
			angrenzende_laender[2]=laender[21];
			angrenzende_laender[3]=laender[4];
			angrenzende_laender[4]=laender[16];
			laender[15].setze_angrenzende_Laender(angrenzende_laender);
			
		//Moldavien
			angrenzende_laender = new Land[2];
			angrenzende_laender[0]=laender[15];
			angrenzende_laender[1]=laender[4];
			laender[16].setze_angrenzende_Laender(angrenzende_laender);
			
		//Montenegro
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[12];
			angrenzende_laender[1]=laender[11];
			angrenzende_laender[2]=laender[13];
			angrenzende_laender[3]=laender[36];
			laender[17].setze_angrenzende_Laender(angrenzende_laender);
			
		//Mazedonien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[8];
			angrenzende_laender[1]=laender[36];
			angrenzende_laender[2]=laender[13];
			angrenzende_laender[3]=laender[14];
			laender[18].setze_angrenzende_Laender(angrenzende_laender);
			
		//Portugal
			angrenzende_laender = new Land[1];
			angrenzende_laender[0]=laender[7];
			laender[19].setze_angrenzende_Laender(angrenzende_laender);
			
		//Slovenien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[5];
			angrenzende_laender[1]=laender[24];
			angrenzende_laender[2]=laender[21];
			angrenzende_laender[3]=laender[12];
			laender[20].setze_angrenzende_Laender(angrenzende_laender);
			
		//Ungarn
			angrenzende_laender = new Land[7];
			angrenzende_laender[0]=laender[4];
			angrenzende_laender[1]=laender[15];
			angrenzende_laender[2]=laender[13];
			angrenzende_laender[3]=laender[12];
			angrenzende_laender[4]=laender[20];
			angrenzende_laender[5]=laender[24];
			angrenzende_laender[6]=laender[22];
			laender[21].setze_angrenzende_Laender(angrenzende_laender);
			
		//Slovakai
			angrenzende_laender = new Land[5];
			angrenzende_laender[0]=laender[4];
			angrenzende_laender[1]=laender[21];
			angrenzende_laender[2]=laender[24];
			angrenzende_laender[3]=laender[23];
			angrenzende_laender[4]=laender[26];
			laender[22].setze_angrenzende_Laender(angrenzende_laender);
			
		//Tschechien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[24];
			angrenzende_laender[1]=laender[9];
			angrenzende_laender[2]=laender[26];
			angrenzende_laender[3]=laender[22];
			laender[23].setze_angrenzende_Laender(angrenzende_laender);
		
		//Oestereich
			angrenzende_laender = new Land[7];
			angrenzende_laender[0]=laender[23];
			angrenzende_laender[1]=laender[22];
			angrenzende_laender[2]=laender[21];
			angrenzende_laender[3]=laender[20];
			angrenzende_laender[4]=laender[5];
			angrenzende_laender[5]=laender[25];
			angrenzende_laender[6]=laender[9];
			laender[24].setze_angrenzende_Laender(angrenzende_laender);
			
		//Schweiz
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[24];
			angrenzende_laender[1]=laender[5];
			angrenzende_laender[2]=laender[6];
			angrenzende_laender[3]=laender[9];
			laender[25].setze_angrenzende_Laender(angrenzende_laender);
			
		//Polen
			angrenzende_laender = new Land[7];
			angrenzende_laender[0]=laender[37];
			angrenzende_laender[1]=laender[30];
			angrenzende_laender[2]=laender[27];
			angrenzende_laender[3]=laender[4];
			angrenzende_laender[4]=laender[22];
			angrenzende_laender[5]=laender[23];
			angrenzende_laender[6]=laender[9];
			laender[26].setze_angrenzende_Laender(angrenzende_laender);
			
		//weissrussland
			angrenzende_laender = new Land[5];
			angrenzende_laender[0]=laender[0];
			angrenzende_laender[1]=laender[4];
			angrenzende_laender[2]=laender[26];
			angrenzende_laender[3]=laender[29];
			angrenzende_laender[4]=laender[30];
			laender[27].setze_angrenzende_Laender(angrenzende_laender);
			
		//Estland
			angrenzende_laender = new Land[2];
			angrenzende_laender[0]=laender[0];
			angrenzende_laender[1]=laender[29];
			laender[28].setze_angrenzende_Laender(angrenzende_laender);
			
		//Lettland
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[0];
			angrenzende_laender[1]=laender[28];
			angrenzende_laender[2]=laender[27];
			angrenzende_laender[3]=laender[30];
			laender[29].setze_angrenzende_Laender(angrenzende_laender);	
			
		//Litauen
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[37];
			angrenzende_laender[1]=laender[26];
			angrenzende_laender[2]=laender[27];
			angrenzende_laender[3]=laender[29];
			laender[30].setze_angrenzende_Laender(angrenzende_laender);
			
		//Niederlande
			angrenzende_laender = new Land[2];
			angrenzende_laender[0]=laender[32];
			angrenzende_laender[1]=laender[9];
			laender[31].setze_angrenzende_Laender(angrenzende_laender);
		
		//Belgien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[31];
			angrenzende_laender[1]=laender[9];
			angrenzende_laender[2]=laender[6];
			angrenzende_laender[3]=laender[33];
			laender[32].setze_angrenzende_Laender(angrenzende_laender);	
			
		//Grossbritanien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[6];
			angrenzende_laender[1]=laender[32];
			angrenzende_laender[2]=laender[34];
			angrenzende_laender[3]=laender[35];
			laender[33].setze_angrenzende_Laender(angrenzende_laender);
			
		//Irland
			angrenzende_laender = new Land[1];
			angrenzende_laender[0]=laender[33];
			laender[34].setze_angrenzende_Laender(angrenzende_laender);
			
		//Island
			angrenzende_laender = new Land[1];
			angrenzende_laender[0]=laender[33];
			laender[35].setze_angrenzende_Laender(angrenzende_laender);
			
		//Albanien
			angrenzende_laender = new Land[4];
			angrenzende_laender[0]=laender[8];
			angrenzende_laender[1]=laender[18];
			angrenzende_laender[2]=laender[13];
			angrenzende_laender[3]=laender[17];
			laender[36].setze_angrenzende_Laender(angrenzende_laender);	
			
		//Kaliningrad
			angrenzende_laender = new Land[2];
			angrenzende_laender[0]=laender[26];
			angrenzende_laender[1]=laender[30];
			laender[37].setze_angrenzende_Laender(angrenzende_laender);
	}
	
	
	
	static Polygon get_russland(){
	
		Polygon p = new Polygon();
		
		p.addPoint(500,2);
		p.addPoint(451,2);
		p.addPoint(450,7);
		p.addPoint(449,9);
		p.addPoint(448,10);
		p.addPoint(447,12);
		p.addPoint(446,13);
		p.addPoint(445,15);
		p.addPoint(444,16);
		p.addPoint(443,18);
		p.addPoint(442,19);
		p.addPoint(442,20);
		p.addPoint(445,26);
		p.addPoint(446,26);
		p.addPoint(446,27);
		p.addPoint(445,27);
		p.addPoint(443,31);
		p.addPoint(439,33);
		p.addPoint(439,34);
		p.addPoint(438,34);
		p.addPoint(438,33);
		p.addPoint(434,31);
		p.addPoint(428,31);
		p.addPoint(428,24);
		p.addPoint(429,24);
		p.addPoint(430,23);
		p.addPoint(432,22);
		p.addPoint(433,21);
		p.addPoint(433,20);
		p.addPoint(431,19);
		p.addPoint(430,18);
		p.addPoint(426,16);
		p.addPoint(424,16);
		p.addPoint(422,17);
		p.addPoint(417,18);
		p.addPoint(417,19);
		p.addPoint(419,20);
		p.addPoint(421,22);
		p.addPoint(422,25);
		p.addPoint(423,27);
		p.addPoint(424,32);
		p.addPoint(425,34);
		p.addPoint(427,35);
		p.addPoint(429,37);
		p.addPoint(430,40);
		p.addPoint(431,40);
		p.addPoint(431,44);
		p.addPoint(430,44);
		p.addPoint(430,47);
		p.addPoint(427,47);
		p.addPoint(427,46);
		p.addPoint(424,46);
		p.addPoint(421,47);
		p.addPoint(420,48);
		p.addPoint(419,50);
		p.addPoint(418,53);
		p.addPoint(417,54);
		p.addPoint(416,56);
		p.addPoint(415,57);
		p.addPoint(412,63);
		p.addPoint(412,64);
		p.addPoint(415,67);
		p.addPoint(417,68);
		p.addPoint(421,72);
		p.addPoint(420,73);
		p.addPoint(417,74);
		p.addPoint(417,75);
		p.addPoint(412,75);
		p.addPoint(412,74);
		p.addPoint(408,73);
		p.addPoint(406,72);
		p.addPoint(401,72);
		p.addPoint(399,73);
		p.addPoint(398,75);
		p.addPoint(398,77);
		p.addPoint(404,80);
		p.addPoint(406,80);
		p.addPoint(406,79);
		p.addPoint(408,79);
		p.addPoint(408,81);
		p.addPoint(409,85);
		p.addPoint(410,85);
		p.addPoint(410,87);
		p.addPoint(406,87);
		p.addPoint(406,88);
		p.addPoint(402,88);
		p.addPoint(402,87);
		p.addPoint(399,86);
		p.addPoint(397,85);
		p.addPoint(392,84);
		p.addPoint(389,84);
		p.addPoint(389,82);
		p.addPoint(388,79);
		p.addPoint(384,67);
		p.addPoint(383,65);
		p.addPoint(381,64);
		p.addPoint(380,63);
		p.addPoint(376,61);
		p.addPoint(373,60);
		p.addPoint(371,59);
		p.addPoint(370,57);
		p.addPoint(369,56);
		p.addPoint(368,56);
		p.addPoint(368,54);
		p.addPoint(371,54);
		p.addPoint(371,55);
		p.addPoint(373,56);
		p.addPoint(382,58);
		p.addPoint(384,59);
		p.addPoint(391,59);
		p.addPoint(403,58);
		p.addPoint(407,56);
		p.addPoint(412,51);
		p.addPoint(413,49);
		p.addPoint(414,46);
		p.addPoint(414,44);
		p.addPoint(412,40);
		p.addPoint(410,38);
		p.addPoint(409,36);
		p.addPoint(407,34);
		p.addPoint(403,32);
		p.addPoint(395,31);
		p.addPoint(385,26);
		p.addPoint(381,25);
		p.addPoint(375,24);
		p.addPoint(368,24);
		p.addPoint(368,25);
		p.addPoint(364,25);
		p.addPoint(364,22);
		p.addPoint(363,21);
		p.addPoint(361,20);
		p.addPoint(360,19);
		p.addPoint(359,19);
		p.addPoint(353,20);
		p.addPoint(353,21);
		p.addPoint(349,21);
		p.addPoint(349,22);
		p.addPoint(354,22);
		p.addPoint(354,24);
		p.addPoint(353,24);
		p.addPoint(351,26);
		p.addPoint(350,28);
		p.addPoint(349,31);
		p.addPoint(348,33);
		p.addPoint(346,35);
		p.addPoint(346,42);
		p.addPoint(348,44);
		p.addPoint(350,45);
		p.addPoint(354,49);
		p.addPoint(355,49);
		p.addPoint(355,57);
		p.addPoint(354,57);
		p.addPoint(354,62);
		p.addPoint(355,65);
		p.addPoint(356,67);
		p.addPoint(359,70);
		p.addPoint(360,72);
		p.addPoint(361,85);
		p.addPoint(363,87);
		p.addPoint(365,91);
		p.addPoint(367,92);
		p.addPoint(368,95);
		p.addPoint(369,95);
		p.addPoint(369,99);
		p.addPoint(368,99);
		p.addPoint(368,101);
		p.addPoint(369,103);
		p.addPoint(371,104);
		p.addPoint(373,106);
		p.addPoint(375,107);
		p.addPoint(376,110);
		p.addPoint(377,110);
		p.addPoint(377,114);
		p.addPoint(376,114);
		p.addPoint(375,118);
		p.addPoint(373,122);
		p.addPoint(372,125);
		p.addPoint(368,133);
		p.addPoint(367,134);
		p.addPoint(366,136);
		p.addPoint(365,137);
		p.addPoint(364,139);
		p.addPoint(363,140);
		p.addPoint(362,142);
		p.addPoint(362,143);
		p.addPoint(366,143);
		p.addPoint(366,144);
		p.addPoint(370,146);
		p.addPoint(371,146);
		p.addPoint(373,145);
		p.addPoint(373,144);
		p.addPoint(374,144);
		p.addPoint(374,145);
		p.addPoint(375,146);
		p.addPoint(376,146);
		p.addPoint(376,149);
		p.addPoint(375,149);
		p.addPoint(371,150);
		p.addPoint(366,155);
		p.addPoint(365,157);
		p.addPoint(365,158);
		p.addPoint(367,160);
		p.addPoint(368,160);
		p.addPoint(368,162);
		p.addPoint(367,162);
		p.addPoint(366,164);
		p.addPoint(366,166);
		p.addPoint(363,166);
		p.addPoint(361,167);
		p.addPoint(361,170);
		p.addPoint(362,173);
		p.addPoint(365,176);
		p.addPoint(367,177);
		p.addPoint(368,177);
		p.addPoint(368,180);
		p.addPoint(367,180);
		p.addPoint(366,182);
		p.addPoint(366,184);
		p.addPoint(367,186);
		p.addPoint(369,187);
		p.addPoint(370,192);
		p.addPoint(372,194);
		p.addPoint(375,200);
		p.addPoint(376,201);
		p.addPoint(379,202);
		p.addPoint(382,202);
		p.addPoint(382,201);
		p.addPoint(384,201);
		p.addPoint(384,202);
		p.addPoint(385,204);
		p.addPoint(387,204);
		p.addPoint(388,203);
		p.addPoint(390,202);
		p.addPoint(390,201);
		p.addPoint(392,201);
		p.addPoint(392,202);
		p.addPoint(394,204);
		p.addPoint(396,204);
		p.addPoint(396,207);
		p.addPoint(397,209);
		p.addPoint(398,214);
		p.addPoint(399,215);
		p.addPoint(400,217);
		p.addPoint(404,221);
		p.addPoint(407,221);
		p.addPoint(407,223);
		p.addPoint(408,225);
		p.addPoint(409,225);
		p.addPoint(411,224);
		p.addPoint(411,223);
		p.addPoint(413,223);
		p.addPoint(413,224);
		p.addPoint(414,226);
		p.addPoint(417,226);
		p.addPoint(417,229);
		p.addPoint(416,229);
		p.addPoint(415,231);
		p.addPoint(414,232);
		p.addPoint(407,233);
		p.addPoint(406,234);
		p.addPoint(406,235);
		p.addPoint(407,236);
		p.addPoint(408,238);
		p.addPoint(409,239);
		p.addPoint(410,241);
		p.addPoint(411,242);
		p.addPoint(412,244);
		p.addPoint(413,246);
		p.addPoint(416,246);
		p.addPoint(416,243);
		p.addPoint(419,243);
		p.addPoint(422,242);
		p.addPoint(427,241);
		p.addPoint(427,240);
		p.addPoint(429,240);
		p.addPoint(429,241);
		p.addPoint(430,243);
		p.addPoint(434,245);
		p.addPoint(435,245);
		p.addPoint(435,246);
		p.addPoint(434,246);
		p.addPoint(433,247);
		p.addPoint(433,249);
		p.addPoint(434,251);
		p.addPoint(436,252);
		p.addPoint(440,252);
		p.addPoint(441,251);
		p.addPoint(441,250);
		p.addPoint(442,250);
		p.addPoint(442,251);
		p.addPoint(445,254);
		p.addPoint(447,258);
		p.addPoint(449,259);
		p.addPoint(451,259);
		p.addPoint(452,258);
		p.addPoint(452,257);
		p.addPoint(453,257);
		p.addPoint(453,258);
		p.addPoint(454,259);
		p.addPoint(456,259);
		p.addPoint(460,257);
		p.addPoint(461,256);
		p.addPoint(461,255);
		p.addPoint(465,255);
		p.addPoint(465,256);
		p.addPoint(467,257);
		p.addPoint(469,259);
		p.addPoint(470,259);
		p.addPoint(471,258);
		p.addPoint(471,257);
		p.addPoint(476,257);
		p.addPoint(476,258);
		p.addPoint(478,258);
		p.addPoint(481,257);
		p.addPoint(481,256);
		p.addPoint(487,256);
		p.addPoint(487,257);
		p.addPoint(488,258);
		p.addPoint(489,260);
		p.addPoint(490,261);
		p.addPoint(491,261);
		p.addPoint(491,263);
		p.addPoint(490,263);
		p.addPoint(489,264);
		p.addPoint(489,265);
		p.addPoint(490,266);
		p.addPoint(491,266);
		p.addPoint(491,267);
		p.addPoint(490,267);
		p.addPoint(489,268);
		p.addPoint(489,271);
		p.addPoint(491,272);
		p.addPoint(492,273);
		p.addPoint(493,273);
		p.addPoint(493,280);
		p.addPoint(492,280);
		p.addPoint(490,281);
		p.addPoint(486,282);
		p.addPoint(485,284);
		p.addPoint(484,286);
		p.addPoint(483,287);
		p.addPoint(483,290);
		p.addPoint(484,290);
		p.addPoint(488,288);
		p.addPoint(488,287);
		p.addPoint(491,287);
		p.addPoint(491,288);
		p.addPoint(492,288);
		p.addPoint(492,289);
		p.addPoint(491,289);
		p.addPoint(489,290);
		p.addPoint(488,291);
		p.addPoint(487,292);
		p.addPoint(485,296);
		p.addPoint(485,298);
		p.addPoint(482,298);
		p.addPoint(482,299);
		p.addPoint(483,300);
		p.addPoint(485,301);
		p.addPoint(487,301);
		p.addPoint(487,303);
		p.addPoint(486,303);
		p.addPoint(485,307);
		p.addPoint(484,310);
		p.addPoint(483,314);
		p.addPoint(482,316);
		p.addPoint(480,317);
		p.addPoint(479,318);
		p.addPoint(478,320);
		p.addPoint(478,322);
		p.addPoint(480,322);
		p.addPoint(480,321);
		p.addPoint(483,321);
		p.addPoint(483,322);
		p.addPoint(487,322);
		p.addPoint(487,323);
		p.addPoint(491,325);
		p.addPoint(493,327);
		p.addPoint(497,328);
		p.addPoint(499,329);
		p.addPoint(500,329);
		p.addPoint(500, 2);
		
		return p;
	}

	
	static Polygon get_finnland(){
		
		Polygon p = new Polygon();
		
		p.addPoint(360,72);
		p.addPoint(359,70);
		p.addPoint(356,67);
		p.addPoint(355,65);
		p.addPoint(354,62);
		p.addPoint(353,62);
		p.addPoint(353,57);
		p.addPoint(354,57);
		p.addPoint(354,49);
		p.addPoint(350,45);
		p.addPoint(348,44);
		p.addPoint(346,44);
		p.addPoint(346,42);
		p.addPoint(345,42);
		p.addPoint(345,35);
		p.addPoint(346,35);
		p.addPoint(347,34);
		p.addPoint(347,33);
		p.addPoint(346,32);
		p.addPoint(345,32);
		p.addPoint(345,31);
		p.addPoint(346,31);
		p.addPoint(347,30);
		p.addPoint(347,29);
		p.addPoint(345,25);
		p.addPoint(343,24);
		p.addPoint(342,23);
		p.addPoint(340,22);
		p.addPoint(338,22);
		p.addPoint(336,24);
		p.addPoint(334,25);
		p.addPoint(332,26);
		p.addPoint(331,27);
		p.addPoint(330,38);
		p.addPoint(329,39);
		p.addPoint(328,41);
		p.addPoint(328,42);
		p.addPoint(325,42);
		p.addPoint(325,41);
		p.addPoint(323,41);
		p.addPoint(322,42);
		p.addPoint(322,43);
		p.addPoint(315,43);
		p.addPoint(315,41);
		p.addPoint(314,39);
		p.addPoint(311,36);
		p.addPoint(309,36);
		p.addPoint(308,38);
		p.addPoint(307,39);
		p.addPoint(307,40);
		p.addPoint(308,41);
		p.addPoint(310,42);
		p.addPoint(312,44);
		p.addPoint(314,45);
		p.addPoint(315,46);
		p.addPoint(319,48);
		p.addPoint(321,50);
		p.addPoint(322,52);
		p.addPoint(324,63);
		p.addPoint(325,65);
		p.addPoint(326,67);
		p.addPoint(327,74);
		p.addPoint(328,77);
		p.addPoint(329,78);
		p.addPoint(333,80);
		p.addPoint(334,81);
		p.addPoint(336,82);
		p.addPoint(337,85);
		p.addPoint(338,85);
		p.addPoint(338,89);
		p.addPoint(337,89);
		p.addPoint(336,90);
		p.addPoint(334,91);
		p.addPoint(333,93);
		p.addPoint(332,97);
		p.addPoint(329,103);
		p.addPoint(328,104);
		p.addPoint(327,106);
		p.addPoint(326,107);
		p.addPoint(324,111);
		p.addPoint(321,114);
		p.addPoint(320,116);
		p.addPoint(319,117);
		p.addPoint(318,119);
		p.addPoint(317,123);
		p.addPoint(317,128);
		p.addPoint(318,132);
		p.addPoint(320,136);
		p.addPoint(321,136);
		p.addPoint(321,140);
		p.addPoint(320,140);
		p.addPoint(320,148);
		p.addPoint(326,151);
		p.addPoint(328,153);
		p.addPoint(331,154);
		p.addPoint(337,154);
		p.addPoint(341,153);
		p.addPoint(345,151);
		p.addPoint(346,150);
		p.addPoint(352,147);
		p.addPoint(353,146);
		p.addPoint(357,144);
		p.addPoint(361,143);
		p.addPoint(362,142);
		p.addPoint(363,140);
		p.addPoint(364,139);
		p.addPoint(365,137);
		p.addPoint(366,136);
		p.addPoint(367,134);
		p.addPoint(368,133);
		p.addPoint(372,125);
		p.addPoint(373,122);
		p.addPoint(375,118);
		p.addPoint(376,114);
		p.addPoint(376,110);
		p.addPoint(375,107);
		p.addPoint(373,106);
		p.addPoint(371,104);
		p.addPoint(369,103);
		p.addPoint(368,101);
		p.addPoint(367,101);
		p.addPoint(367,99);
		p.addPoint(368,99);
		p.addPoint(368,95);
		p.addPoint(367,92);
		p.addPoint(365,91);
		p.addPoint(363,87);
		p.addPoint(361,85);
		p.addPoint(360,72);
		
		return p;
	}
	
	
	static Polygon get_norway(){
		
		Polygon p = new Polygon();
		
		p.addPoint(290,35);
		p.addPoint(290,40);
		p.addPoint(291,41);
		p.addPoint(292,41);
		p.addPoint(292,43);
		p.addPoint(291,43);
		p.addPoint(289,44);
		p.addPoint(289,45);
		p.addPoint(288,45);
		p.addPoint(288,44);
		p.addPoint(287,43);
		p.addPoint(286,43);
		p.addPoint(286,44);
		p.addPoint(284,44);
		p.addPoint(284,43);
		p.addPoint(283,43);
		p.addPoint(283,42);
		p.addPoint(284,42);
		p.addPoint(284,40);
		p.addPoint(283,40);
		p.addPoint(282,42);
		p.addPoint(281,43);
		p.addPoint(279,44);
		p.addPoint(277,45);
		p.addPoint(277,46);
		p.addPoint(278,47);
		p.addPoint(279,48);
		p.addPoint(279,49);
		p.addPoint(278,49);
		p.addPoint(272,52);
		p.addPoint(271,53);
		p.addPoint(271,54);
		p.addPoint(272,54);
		p.addPoint(276,52);
		p.addPoint(280,51);
		p.addPoint(284,50);
		p.addPoint(284,51);
		p.addPoint(283,52);
		p.addPoint(282,54);
		p.addPoint(280,56);
		p.addPoint(279,58);
		p.addPoint(278,61);
		p.addPoint(277,63);
		p.addPoint(274,66);
		p.addPoint(273,68);
		p.addPoint(271,74);
		p.addPoint(263,90);
		p.addPoint(259,94);
		p.addPoint(258,96);
		p.addPoint(256,98);
		p.addPoint(255,100);
		p.addPoint(254,101);
		p.addPoint(253,103);
		p.addPoint(252,104);
		p.addPoint(251,106);
		p.addPoint(250,108);
		p.addPoint(249,109);
		p.addPoint(248,111);
		p.addPoint(248,112);
		p.addPoint(247,112);
		p.addPoint(247,111);
		p.addPoint(245,109);
		p.addPoint(244,109);
		p.addPoint(242,113);
		p.addPoint(238,117);
		p.addPoint(232,118);
		p.addPoint(226,124);
		p.addPoint(224,125);
		p.addPoint(221,128);
		p.addPoint(219,129);
		p.addPoint(218,130);
		p.addPoint(218,132);
		p.addPoint(219,132);
		p.addPoint(219,135);
		p.addPoint(218,135);
		p.addPoint(217,136);
		p.addPoint(216,138);
		p.addPoint(216,150);
		p.addPoint(217,152);
		p.addPoint(218,152);
		p.addPoint(218,157);
		p.addPoint(217,157);
		p.addPoint(216,159);
		p.addPoint(216,164);
		p.addPoint(218,164);
		p.addPoint(218,163);
		p.addPoint(221,163);
		p.addPoint(221,165);
		p.addPoint(220,165);
		p.addPoint(218,166);
		p.addPoint(217,168);
		p.addPoint(216,171);
		p.addPoint(216,173);
		p.addPoint(217,174);
		p.addPoint(218,176);
		p.addPoint(220,178);
		p.addPoint(224,180);
		p.addPoint(228,181);
		p.addPoint(230,181);
		p.addPoint(236,178);
		p.addPoint(239,175);
		p.addPoint(241,174);
		p.addPoint(244,171);
		p.addPoint(248,170);
		p.addPoint(249,168);
		p.addPoint(249,166);
		p.addPoint(251,166);
		p.addPoint(251,167);
		p.addPoint(253,169);
		p.addPoint(254,172);
		p.addPoint(256,172);
		p.addPoint(257,169);
		p.addPoint(258,161);
		p.addPoint(259,159);
		p.addPoint(261,158);
		p.addPoint(262,153);
		p.addPoint(262,147);
		p.addPoint(261,147);
		p.addPoint(261,144);
		p.addPoint(263,144);
		p.addPoint(264,143);
		p.addPoint(265,141);
		p.addPoint(265,138);
		p.addPoint(262,135);
		p.addPoint(261,135);
		p.addPoint(261,121);
		p.addPoint(262,121);
		p.addPoint(262,115);
		p.addPoint(261,115);
		p.addPoint(261,111);
		p.addPoint(262,111);
		p.addPoint(263,109);
		p.addPoint(269,106);
		p.addPoint(273,105);
		p.addPoint(274,104);
		p.addPoint(274,102);
		p.addPoint(273,98);
		p.addPoint(272,98);
		p.addPoint(272,97);
		p.addPoint(273,97);
		p.addPoint(276,91);
		p.addPoint(277,84);
		p.addPoint(277,78);
		p.addPoint(279,78);
		p.addPoint(281,76);
		p.addPoint(282,73);
		p.addPoint(286,65);
		p.addPoint(286,63);
		p.addPoint(285,63);
		p.addPoint(285,60);
		p.addPoint(286,60);
		p.addPoint(288,56);
		p.addPoint(288,54);
		p.addPoint(290,54);
		p.addPoint(294,53);
		p.addPoint(295,48);
		p.addPoint(296,47);
		p.addPoint(296,46);
		p.addPoint(300,46);
		p.addPoint(300,47);
		p.addPoint(304,47);
		p.addPoint(304,39);
		p.addPoint(307,39);
		p.addPoint(308,38);
		p.addPoint(309,36);
		p.addPoint(309,35);
		p.addPoint(311,35);
		p.addPoint(311,36);
		p.addPoint(314,39);
		p.addPoint(315,41);
		p.addPoint(316,42);
		p.addPoint(322,42);
		p.addPoint(323,41);
		p.addPoint(323,40);
		p.addPoint(325,40);
		p.addPoint(325,41);
		p.addPoint(328,41);
		p.addPoint(329,39);
		p.addPoint(330,38);
		p.addPoint(330,27);
		p.addPoint(331,27);
		p.addPoint(331,25);
		p.addPoint(334,25);
		p.addPoint(336,24);
		p.addPoint(338,22);
		p.addPoint(338,21);
		p.addPoint(340,21);
		p.addPoint(340,22);
		p.addPoint(342,23);
		p.addPoint(343,24);
		p.addPoint(345,25);
		p.addPoint(347,29);
		p.addPoint(348,29);
		p.addPoint(348,30);
		p.addPoint(347,30);
		p.addPoint(346,31);
		p.addPoint(346,32);
		p.addPoint(347,33);
		p.addPoint(348,33);
		p.addPoint(349,31);
		p.addPoint(350,28);
		p.addPoint(351,26);
		p.addPoint(352,25);
		p.addPoint(353,24);
		p.addPoint(353,23);
		p.addPoint(348,23);
		p.addPoint(348,19);
		p.addPoint(349,19);
		p.addPoint(350,18);
		p.addPoint(351,16);
		p.addPoint(351,14);
		p.addPoint(343,10);
		p.addPoint(339,9);
		p.addPoint(337,9);
		p.addPoint(336,10);
		p.addPoint(334,16);
		p.addPoint(334,17);
		p.addPoint(332,17);
		p.addPoint(332,15);
		p.addPoint(331,13);
		p.addPoint(330,13);
		p.addPoint(329,14);
		p.addPoint(329,15);
		p.addPoint(328,15);
		p.addPoint(328,14);
		p.addPoint(327,10);
		p.addPoint(326,10);
		p.addPoint(324,11);
		p.addPoint(322,15);
		p.addPoint(322,17);
		p.addPoint(320,17);
		p.addPoint(320,16);
		p.addPoint(318,15);
		p.addPoint(316,15);
		p.addPoint(312,19);
		p.addPoint(310,23);
		p.addPoint(309,24);
		p.addPoint(305,26);
		p.addPoint(297,27);
		p.addPoint(296,29);
		p.addPoint(295,30);
		p.addPoint(294,32);
		p.addPoint(292,34);
		p.addPoint(290,35);
		
		return p;
	}
	
	
	static Polygon get_sweden(){
		
		Polygon p = new Polygon();
		
		p.addPoint(305,40);
		p.addPoint(305,47);
		p.addPoint(304,47);
		p.addPoint(304,48);
		p.addPoint(300,48);
		p.addPoint(300,47);
		p.addPoint(296,47);
		p.addPoint(295,48);
		p.addPoint(295,54);
		p.addPoint(290,54);
		p.addPoint(288,56);
		p.addPoint(286,60);
		p.addPoint(286,63);
		p.addPoint(287,63);
		p.addPoint(287,65);
		p.addPoint(286,65);
		p.addPoint(282,73);
		p.addPoint(281,76);
		p.addPoint(281,78);
		p.addPoint(279,78);
		p.addPoint(278,79);
		p.addPoint(277,84);
		p.addPoint(276,91);
		p.addPoint(273,97);
		p.addPoint(273,98);
		p.addPoint(274,102);
		p.addPoint(275,102);
		p.addPoint(275,105);
		p.addPoint(273,105);
		p.addPoint(269,106);
		p.addPoint(263,109);
		p.addPoint(262,111);
		p.addPoint(262,115);
		p.addPoint(263,115);
		p.addPoint(263,121);
		p.addPoint(262,121);
		p.addPoint(262,135);
		p.addPoint(265,138);
		p.addPoint(266,138);
		p.addPoint(266,141);
		p.addPoint(265,141);
		p.addPoint(265,144);
		p.addPoint(263,144);
		p.addPoint(262,145);
		p.addPoint(262,147);
		p.addPoint(263,147);
		p.addPoint(263,153);
		p.addPoint(262,153);
		p.addPoint(262,158);
		p.addPoint(261,158);
		p.addPoint(261,159);
		p.addPoint(259,159);
		p.addPoint(258,161);
		p.addPoint(257,169);
		p.addPoint(256,172);
		p.addPoint(254,173);
		p.addPoint(254,174);
		p.addPoint(257,186);
		p.addPoint(258,189);
		p.addPoint(260,197);
		p.addPoint(261,199);
		p.addPoint(262,200);
		p.addPoint(263,202);
		p.addPoint(264,203);
		p.addPoint(265,203);
		p.addPoint(265,205);
		p.addPoint(264,205);
		p.addPoint(263,207);
		p.addPoint(263,210);
		p.addPoint(264,212);
		p.addPoint(265,218);
		p.addPoint(273,218);
		p.addPoint(274,213);
		p.addPoint(275,212);
		p.addPoint(276,210);
		p.addPoint(277,209);
		p.addPoint(286,208);
		p.addPoint(287,207);
		p.addPoint(288,205);
		p.addPoint(289,202);
		p.addPoint(290,197);
		p.addPoint(291,191);
		p.addPoint(292,179);
		p.addPoint(293,176);
		p.addPoint(298,171);
		p.addPoint(300,170);
		p.addPoint(301,169);
		p.addPoint(301,168);
		p.addPoint(300,167);
		p.addPoint(299,167);
		p.addPoint(299,166);
		p.addPoint(300,166);
		p.addPoint(301,165);
		p.addPoint(303,164);
		p.addPoint(304,162);
		p.addPoint(304,158);
		p.addPoint(303,155);
		p.addPoint(302,154);
		p.addPoint(300,153);
		p.addPoint(297,150);
		p.addPoint(295,149);
		p.addPoint(294,148);
		p.addPoint(293,148);
		p.addPoint(293,129);
		p.addPoint(294,129);
		p.addPoint(296,125);
		p.addPoint(297,124);
		p.addPoint(299,120);
		p.addPoint(303,116);
		p.addPoint(304,114);
		p.addPoint(308,110);
		p.addPoint(310,109);
		p.addPoint(312,108);
		p.addPoint(316,100);
		p.addPoint(316,98);
		p.addPoint(314,96);
		p.addPoint(313,96);
		p.addPoint(315,92);
		p.addPoint(316,87);
		p.addPoint(317,86);
		p.addPoint(319,82);
		p.addPoint(319,80);
		p.addPoint(325,80);
		p.addPoint(327,78);
		p.addPoint(327,74);
		p.addPoint(326,67);
		p.addPoint(324,63);
		p.addPoint(323,58);
		p.addPoint(322,52);
		p.addPoint(321,50);
		p.addPoint(319,48);
		p.addPoint(315,46);
		p.addPoint(314,45);
		p.addPoint(312,44);
		p.addPoint(310,42);
		p.addPoint(308,41);
		p.addPoint(307,40);
		p.addPoint(305,40);
		
		return p;
	}
	
	
	static Polygon get_ukraine(){
		
		Polygon p = new Polygon();
		
		p.addPoint(417,244);
		p.addPoint(416,246);
		p.addPoint(410,247);
		p.addPoint(408,248);
		p.addPoint(406,250);
		p.addPoint(406,260);
		p.addPoint(404,260);
		p.addPoint(404,259);
		p.addPoint(400,259);
		p.addPoint(397,260);
		p.addPoint(397,261);
		p.addPoint(395,261);
		p.addPoint(395,260);
		p.addPoint(394,259);
		p.addPoint(393,259);
		p.addPoint(392,260);
		p.addPoint(392,261);
		p.addPoint(390,261);
		p.addPoint(390,260);
		p.addPoint(389,260);
		p.addPoint(389,261);
		p.addPoint(387,261);
		p.addPoint(387,260);
		p.addPoint(386,260);
		p.addPoint(385,261);
		p.addPoint(385,262);
		p.addPoint(381,262);
		p.addPoint(381,261);
		p.addPoint(380,261);
		p.addPoint(380,262);
		p.addPoint(378,262);
		p.addPoint(378,261);
		p.addPoint(376,259);
		p.addPoint(373,259);
		p.addPoint(373,260);
		p.addPoint(371,260);
		p.addPoint(371,259);
		p.addPoint(368,258);
		p.addPoint(365,258);
		p.addPoint(360,259);
		p.addPoint(356,261);
		p.addPoint(355,263);
		p.addPoint(354,264);
		p.addPoint(351,265);
		p.addPoint(350,266);
		p.addPoint(350,268);
		p.addPoint(352,272);
		p.addPoint(353,276);
		p.addPoint(354,276);
		p.addPoint(354,278);
		p.addPoint(353,278);
		p.addPoint(349,282);
		p.addPoint(345,290);
		p.addPoint(344,293);
		p.addPoint(343,295);
		p.addPoint(342,299);
		p.addPoint(341,304);
		p.addPoint(341,306);
		p.addPoint(342,307);
		p.addPoint(346,309);
		p.addPoint(347,311);
		p.addPoint(349,311);
		p.addPoint(359,310);
		p.addPoint(361,309);
		p.addPoint(361,308);
		p.addPoint(363,308);
		p.addPoint(363,309);
		p.addPoint(364,310);
		p.addPoint(366,311);
		p.addPoint(367,311);
		p.addPoint(368,309);
		p.addPoint(378,304);
		p.addPoint(384,303);
		p.addPoint(386,301);
		p.addPoint(386,300);
		p.addPoint(389,300);
		p.addPoint(389,301);
		p.addPoint(392,302);
		p.addPoint(394,303);
		p.addPoint(401,304);
		p.addPoint(403,304);
		p.addPoint(403,303);
		p.addPoint(404,303);
		p.addPoint(404,304);
		p.addPoint(405,311);
		p.addPoint(408,312);
		p.addPoint(409,315);
		p.addPoint(413,317);
		p.addPoint(415,321);
		p.addPoint(416,321);
		p.addPoint(416,322);
		p.addPoint(415,322);
		p.addPoint(414,323);
		p.addPoint(414,324);
		p.addPoint(412,324);
		p.addPoint(412,323);
		p.addPoint(409,323);
		p.addPoint(409,324);
		p.addPoint(408,324);
		p.addPoint(408,323);
		p.addPoint(407,323);
		p.addPoint(406,325);
		p.addPoint(406,328);
		p.addPoint(407,328);
		p.addPoint(407,330);
		p.addPoint(406,330);
		p.addPoint(405,334);
		p.addPoint(405,337);
		p.addPoint(406,337);
		p.addPoint(407,336);
		p.addPoint(409,335);
		p.addPoint(411,334);
		p.addPoint(412,333);
		p.addPoint(413,331);
		p.addPoint(417,327);
		p.addPoint(419,323);
		p.addPoint(421,317);
		p.addPoint(422,317);
		p.addPoint(430,315);
		p.addPoint(430,314);
		p.addPoint(432,314);
		p.addPoint(432,317);
		p.addPoint(431,317);
		p.addPoint(431,319);
		p.addPoint(432,320);
		p.addPoint(436,321);
		p.addPoint(439,321);
		p.addPoint(442,318);
		p.addPoint(442,317);
		p.addPoint(444,317);
		p.addPoint(444,318);
		p.addPoint(447,319);
		p.addPoint(448,319);
		p.addPoint(448,321);
		p.addPoint(446,321);
		p.addPoint(444,322);
		p.addPoint(443,323);
		p.addPoint(441,327);
		p.addPoint(441,328);
		p.addPoint(443,329);
		p.addPoint(447,330);
		p.addPoint(449,331);
		p.addPoint(451,331);
		p.addPoint(451,337);
		p.addPoint(452,338);
		p.addPoint(455,338);
		p.addPoint(457,337);
		p.addPoint(459,335);
		p.addPoint(461,331);
		p.addPoint(465,329);
		p.addPoint(466,328);
		p.addPoint(467,326);
		p.addPoint(473,325);
		p.addPoint(474,324);
		p.addPoint(476,323);
		p.addPoint(477,322);
		p.addPoint(477,319);
		p.addPoint(473,319);
		p.addPoint(467,322);
		p.addPoint(467,323);
		p.addPoint(461,323);
		p.addPoint(461,322);
		p.addPoint(460,321);
		p.addPoint(459,319);
		p.addPoint(457,318);
		p.addPoint(456,318);
		p.addPoint(456,316);
		p.addPoint(457,316);
		p.addPoint(459,315);
		p.addPoint(460,313);
		p.addPoint(461,310);
		p.addPoint(462,308);
		p.addPoint(467,303);
		p.addPoint(473,300);
		p.addPoint(475,298);
		p.addPoint(476,296);
		p.addPoint(478,294);
		p.addPoint(480,293);
		p.addPoint(481,292);
		p.addPoint(483,291);
		p.addPoint(483,290);
		p.addPoint(482,290);
		p.addPoint(482,287);
		p.addPoint(483,287);
		p.addPoint(484,286);
		p.addPoint(485,284);
		p.addPoint(485,281);
		p.addPoint(490,281);
		p.addPoint(492,280);
		p.addPoint(492,273);
		p.addPoint(491,272);
		p.addPoint(489,271);
		p.addPoint(488,271);
		p.addPoint(488,267);
		p.addPoint(490,267);
		p.addPoint(490,266);
		p.addPoint(489,265);
		p.addPoint(488,265);
		p.addPoint(488,264);
		p.addPoint(489,264);
		p.addPoint(490,263);
		p.addPoint(490,261);
		p.addPoint(489,260);
		p.addPoint(488,258);
		p.addPoint(487,257);
		p.addPoint(481,257);
		p.addPoint(478,258);
		p.addPoint(478,259);
		p.addPoint(476,259);
		p.addPoint(476,258);
		p.addPoint(471,258);
		p.addPoint(470,259);
		p.addPoint(470,260);
		p.addPoint(469,260);
		p.addPoint(469,259);
		p.addPoint(467,257);
		p.addPoint(465,256);
		p.addPoint(461,256);
		p.addPoint(460,257);
		p.addPoint(456,259);
		p.addPoint(456,260);
		p.addPoint(454,260);
		p.addPoint(454,259);
		p.addPoint(453,258);
		p.addPoint(452,258);
		p.addPoint(451,259);
		p.addPoint(451,260);
		p.addPoint(449,260);
		p.addPoint(449,259);
		p.addPoint(447,258);
		p.addPoint(445,254);
		p.addPoint(442,251);
		p.addPoint(441,251);
		p.addPoint(440,252);
		p.addPoint(440,253);
		p.addPoint(436,253);
		p.addPoint(436,252);
		p.addPoint(434,251);
		p.addPoint(433,249);
		p.addPoint(432,249);
		p.addPoint(432,247);
		p.addPoint(433,247);
		p.addPoint(434,246);
		p.addPoint(434,245);
		p.addPoint(430,243);
		p.addPoint(429,241);
		p.addPoint(427,241);
		p.addPoint(422,242);
		p.addPoint(419,243);
		p.addPoint(417,244);
		
		return p;
	}

	
	static Polygon get_italy(){
		
		Polygon p = new Polygon();
		
		p.addPoint(289,395);
		p.addPoint(282,395);
		p.addPoint(282,394);
		p.addPoint(276,391);
		p.addPoint(273,390);
		p.addPoint(272,389);
		p.addPoint(271,387);
		p.addPoint(270,384);
		p.addPoint(269,380);
		p.addPoint(268,377);
		p.addPoint(267,375);
		p.addPoint(266,374);
		p.addPoint(264,373);
		p.addPoint(262,371);
		p.addPoint(260,370);
		p.addPoint(254,364);
		p.addPoint(253,362);
		p.addPoint(252,362);
		p.addPoint(252,358);
		p.addPoint(253,358);
		p.addPoint(254,356);
		p.addPoint(254,354);
		p.addPoint(253,352);
		p.addPoint(252,352);
		p.addPoint(252,350);
		p.addPoint(253,350);
		p.addPoint(254,348);
		p.addPoint(258,347);
		p.addPoint(259,346);
		p.addPoint(261,345);
		p.addPoint(261,344);
		p.addPoint(262,344);
		p.addPoint(262,345);
		p.addPoint(266,347);
		p.addPoint(267,347);
		p.addPoint(267,341);
		p.addPoint(266,334);
		p.addPoint(263,333);
		p.addPoint(259,332);
		p.addPoint(255,330);
		p.addPoint(254,328);
		p.addPoint(253,327);
		p.addPoint(246,327);
		p.addPoint(242,328);
		p.addPoint(237,329);
		p.addPoint(236,331);
		p.addPoint(236,335);
		p.addPoint(232,335);
		p.addPoint(232,334);
		p.addPoint(228,334);
		p.addPoint(227,335);
		p.addPoint(226,337);
		p.addPoint(226,339);
		p.addPoint(224,339);
		p.addPoint(224,338);
		p.addPoint(220,334);
		p.addPoint(217,334);
		p.addPoint(216,335);
		p.addPoint(215,337);
		p.addPoint(207,338);
		p.addPoint(204,349);
		p.addPoint(204,358);
		p.addPoint(205,359);
		p.addPoint(207,360);
		p.addPoint(209,360);
		p.addPoint(209,365);
		p.addPoint(214,365);
		p.addPoint(216,361);
		p.addPoint(218,360);
		p.addPoint(218,359);
		p.addPoint(221,359);
		p.addPoint(221,360);
		p.addPoint(233,366);
		p.addPoint(234,368);
		p.addPoint(235,374);
		p.addPoint(236,377);
		p.addPoint(237,379);
		p.addPoint(238,380);
		p.addPoint(239,382);
		p.addPoint(240,383);
		p.addPoint(241,386);
		p.addPoint(242,388);
		p.addPoint(246,389);
		p.addPoint(247,390);
		p.addPoint(248,392);
		p.addPoint(250,394);
		p.addPoint(251,396);
		p.addPoint(253,398);
		p.addPoint(254,400);
		p.addPoint(255,401);
		p.addPoint(259,403);
		p.addPoint(263,404);
		p.addPoint(267,405);
		p.addPoint(268,406);
		p.addPoint(270,407);
		p.addPoint(274,411);
		p.addPoint(278,412);
		p.addPoint(278,413);
		p.addPoint(279,415);
		p.addPoint(280,416);
		p.addPoint(281,417);
		p.addPoint(285,418);
		p.addPoint(286,419);
		p.addPoint(287,421);
		p.addPoint(288,424);
		p.addPoint(290,428);
		p.addPoint(291,431);
		p.addPoint(292,431);
		p.addPoint(292,435);
		p.addPoint(291,435);
		p.addPoint(289,437);
		p.addPoint(287,441);
		p.addPoint(286,443);
		p.addPoint(283,443);
		p.addPoint(281,444);
		p.addPoint(276,445);
		p.addPoint(275,446);
		p.addPoint(275,447);
		p.addPoint(266,447);
		p.addPoint(266,446);
		p.addPoint(262,444);
		p.addPoint(256,444);
		p.addPoint(255,445);
		p.addPoint(253,446);
		p.addPoint(253,447);
		p.addPoint(255,451);
		p.addPoint(257,452);
		p.addPoint(260,453);
		p.addPoint(268,457);
		p.addPoint(271,458);
		p.addPoint(273,459);
		p.addPoint(274,461);
		p.addPoint(277,462);
		p.addPoint(281,462);
		p.addPoint(282,461);
		p.addPoint(282,456);
		p.addPoint(281,456);
		p.addPoint(281,451);
		p.addPoint(282,451);
		p.addPoint(283,447);
		p.addPoint(284,445);
		p.addPoint(285,444);
		p.addPoint(286,444);
		p.addPoint(287,446);
		p.addPoint(291,446);
		p.addPoint(293,442);
		p.addPoint(295,440);
		p.addPoint(295,437);
		p.addPoint(294,437);
		p.addPoint(294,434);
		p.addPoint(295,434);
		p.addPoint(299,432);
		p.addPoint(300,431);
		p.addPoint(300,426);
		p.addPoint(294,423);
		p.addPoint(294,422);
		p.addPoint(295,422);
		p.addPoint(295,418);
		p.addPoint(296,418);
		p.addPoint(299,412);
		p.addPoint(300,412);
		p.addPoint(300,413);
		p.addPoint(302,414);
		p.addPoint(306,415);
		p.addPoint(309,416);
		p.addPoint(309,417);
		p.addPoint(310,419);
		p.addPoint(311,420);
		p.addPoint(313,420);
		p.addPoint(314,418);
		p.addPoint(314,415);
		p.addPoint(312,413);
		p.addPoint(310,412);
		p.addPoint(308,410);
		p.addPoint(304,408);
		p.addPoint(303,407);
		p.addPoint(289,400);
		p.addPoint(288,399);
		p.addPoint(288,397);
		p.addPoint(289,397);
		p.addPoint(289,395);

		return p;	
	}

	
	static Polygon get_france(){
		
		Polygon p = new Polygon();
		
		p.addPoint(179,267);
		p.addPoint(174,267);
		p.addPoint(171,268);
		p.addPoint(167,276);
		p.addPoint(166,278);
		p.addPoint(159,278);
		p.addPoint(155,280);
		p.addPoint(153,284);
		p.addPoint(153,285);
		p.addPoint(149,283);
		p.addPoint(144,283);
		p.addPoint(144,280);
		p.addPoint(143,278);
		p.addPoint(141,277);
		p.addPoint(139,277);
		p.addPoint(139,279);
		p.addPoint(140,279);
		p.addPoint(140,286);
		p.addPoint(139,286);
		p.addPoint(139,291);
		p.addPoint(135,289);
		p.addPoint(128,289);
		p.addPoint(128,288);
		p.addPoint(127,286);
		p.addPoint(126,285);
		p.addPoint(124,284);
		p.addPoint(119,284);
		p.addPoint(111,285);
		p.addPoint(111,291);
		p.addPoint(112,293);
		p.addPoint(114,294);
		p.addPoint(117,295);
		p.addPoint(121,299);
		p.addPoint(127,302);
		p.addPoint(130,308);
		p.addPoint(131,308);
		p.addPoint(131,310);
		p.addPoint(130,310);
		p.addPoint(129,312);
		p.addPoint(129,314);
		p.addPoint(130,317);
		p.addPoint(131,318);
		p.addPoint(132,320);
		p.addPoint(133,323);
		p.addPoint(134,323);
		p.addPoint(134,328);
		p.addPoint(133,328);
		p.addPoint(132,332);
		p.addPoint(131,335);
		p.addPoint(130,339);
		p.addPoint(123,353);
		p.addPoint(122,354);
		p.addPoint(121,356);
		p.addPoint(121,357);
		p.addPoint(122,359);
		p.addPoint(123,360);
		p.addPoint(125,361);
		p.addPoint(128,364);
		p.addPoint(130,365);
		p.addPoint(134,369);
		p.addPoint(136,370);
		p.addPoint(139,371);
		p.addPoint(143,371);
		p.addPoint(143,370);
		p.addPoint(146,370);
		p.addPoint(146,371);
		p.addPoint(149,374);
		p.addPoint(151,375);
		p.addPoint(152,376);
		p.addPoint(154,377);
		p.addPoint(158,378);
		p.addPoint(164,379);
		p.addPoint(166,379);
		p.addPoint(166,376);
		p.addPoint(165,376);
		p.addPoint(165,371);
		p.addPoint(166,371);
		p.addPoint(170,369);
		p.addPoint(170,367);
		p.addPoint(171,367);
		p.addPoint(173,366);
		p.addPoint(173,365);
		p.addPoint(176,365);
		p.addPoint(176,366);
		p.addPoint(179,367);
		p.addPoint(180,368);
		p.addPoint(188,372);
		p.addPoint(189,373);
		p.addPoint(191,374);
		p.addPoint(192,375);
		p.addPoint(195,375);
		p.addPoint(198,374);
		p.addPoint(199,373);
		p.addPoint(207,369);
		p.addPoint(208,367);
		p.addPoint(208,361);
		p.addPoint(207,360);
		p.addPoint(205,359);
		p.addPoint(203,359);
		p.addPoint(203,349);
		p.addPoint(204,349);
		p.addPoint(206,341);
		p.addPoint(206,337);
		p.addPoint(205,335);
		p.addPoint(204,331);
		p.addPoint(202,331);
		p.addPoint(201,332);
		p.addPoint(201,333);
		p.addPoint(199,333);
		p.addPoint(199,332);
		p.addPoint(198,332);
		p.addPoint(198,329);
		p.addPoint(199,329);
		p.addPoint(201,327);
		p.addPoint(202,325);
		p.addPoint(205,322);
		p.addPoint(206,320);
		p.addPoint(207,319);
		p.addPoint(208,317);
		p.addPoint(208,316);
		p.addPoint(210,316);
		p.addPoint(210,317);
		p.addPoint(212,317);
		p.addPoint(212,316);
		p.addPoint(214,316);
		p.addPoint(215,310);
		p.addPoint(216,306);
		p.addPoint(217,303);
		p.addPoint(219,301);
		p.addPoint(219,300);
		p.addPoint(218,298);
		p.addPoint(210,294);
		p.addPoint(206,290);
		p.addPoint(204,288);
		p.addPoint(202,287);
		p.addPoint(201,287);
		p.addPoint(200,288);
		p.addPoint(200,289);
		p.addPoint(198,289);
		p.addPoint(198,288);
		p.addPoint(196,286);
		p.addPoint(195,286);
		p.addPoint(195,285);
		p.addPoint(196,285);
		p.addPoint(196,283);
		p.addPoint(195,282);
		p.addPoint(194,282);
		p.addPoint(194,283);
		p.addPoint(191,283);
		p.addPoint(191,282);
		p.addPoint(189,280);
		p.addPoint(188,277);
		p.addPoint(185,274);
		p.addPoint(184,272);
		p.addPoint(183,271);
		p.addPoint(181,270);
		p.addPoint(180,270);
		p.addPoint(180,269);
		p.addPoint(181,269);
		p.addPoint(181,266);
		p.addPoint(179,266);
		p.addPoint(179,267);


		return p;	
	}

	
	static Polygon get_spain(){
		
		Polygon p = new Polygon();
		
		p.addPoint(64,334);
		p.addPoint(60,338);
		p.addPoint(60,339);
		p.addPoint(57,339);
		p.addPoint(57,338);
		p.addPoint(54,338);
		p.addPoint(52,339);
		p.addPoint(51,340);
		p.addPoint(51,344);
		p.addPoint(52,344);
		p.addPoint(52,350);
		p.addPoint(51,350);
		p.addPoint(50,352);
		p.addPoint(50,356);
		p.addPoint(52,356);
		p.addPoint(54,355);
		p.addPoint(54,354);
		p.addPoint(55,354);
		p.addPoint(55,355);
		p.addPoint(56,357);
		p.addPoint(57,359);
		p.addPoint(64,360);
		p.addPoint(68,361);
		p.addPoint(71,362);
		p.addPoint(73,363);
		p.addPoint(73,365);
		p.addPoint(74,368);
		p.addPoint(75,368);
		p.addPoint(75,369);
		p.addPoint(74,369);
		p.addPoint(72,371);
		p.addPoint(70,372);
		p.addPoint(67,375);
		p.addPoint(65,379);
		p.addPoint(64,382);
		p.addPoint(62,386);
		p.addPoint(60,388);
		p.addPoint(57,389);
		p.addPoint(56,390);
		p.addPoint(55,399);
		p.addPoint(53,401);
		p.addPoint(53,405);
		p.addPoint(54,405);
		p.addPoint(54,408);
		p.addPoint(53,408);
		p.addPoint(52,410);
		p.addPoint(51,411);
		p.addPoint(49,412);
		p.addPoint(47,413);
		p.addPoint(46,416);
		p.addPoint(46,419);
		p.addPoint(48,420);
		p.addPoint(50,422);
		p.addPoint(52,423);
		p.addPoint(53,426);
		p.addPoint(54,432);
		p.addPoint(55,435);
		p.addPoint(58,438);
		p.addPoint(59,438);
		p.addPoint(65,435);
		p.addPoint(65,434);
		p.addPoint(74,434);
		p.addPoint(74,435);
		p.addPoint(85,437);
		p.addPoint(89,438);
		p.addPoint(94,439);
		p.addPoint(97,439);
		p.addPoint(103,433);
		p.addPoint(105,432);
		p.addPoint(107,430);
		p.addPoint(107,429);
		p.addPoint(109,429);
		p.addPoint(109,430);
		p.addPoint(111,431);
		p.addPoint(113,431);
		p.addPoint(115,427);
		p.addPoint(116,426);
		p.addPoint(126,421);
		p.addPoint(126,419);
		p.addPoint(123,416);
		p.addPoint(122,416);
		p.addPoint(122,409);
		p.addPoint(123,409);
		p.addPoint(126,406);
		p.addPoint(128,405);
		p.addPoint(135,398);
		p.addPoint(137,397);
		p.addPoint(140,394);
		p.addPoint(142,393);
		p.addPoint(154,390);
		p.addPoint(158,388);
		p.addPoint(161,387);
		p.addPoint(163,386);
		p.addPoint(165,384);
		p.addPoint(166,381);
		p.addPoint(166,380);
		p.addPoint(164,379);
		p.addPoint(158,378);
		p.addPoint(154,377);
		p.addPoint(152,376);
		p.addPoint(151,375);
		p.addPoint(149,374);
		p.addPoint(146,371);
		p.addPoint(143,371);
		p.addPoint(143,372);
		p.addPoint(139,372);
		p.addPoint(139,371);
		p.addPoint(136,370);
		p.addPoint(134,369);
		p.addPoint(130,365);
		p.addPoint(128,364);
		p.addPoint(125,361);
		p.addPoint(123,360);
		p.addPoint(122,359);
		p.addPoint(121,357);
		p.addPoint(119,356);
		p.addPoint(115,355);
		p.addPoint(113,354);
		p.addPoint(105,350);
		p.addPoint(95,349);
		p.addPoint(93,348);
		p.addPoint(92,347);
		p.addPoint(88,345);
		p.addPoint(82,343);
		p.addPoint(78,342);
		p.addPoint(75,341);
		p.addPoint(71,340);
		p.addPoint(69,339);
		p.addPoint(67,337);
		p.addPoint(66,335);
		p.addPoint(65,334);
		p.addPoint(64,334);


		return p;	
	}

	
	static Polygon get_greece(){
	
		Polygon p = new Polygon();
	
		p.addPoint(340,405);
		p.addPoint(340,407);
		p.addPoint(341,407);
		p.addPoint(341,410);
		p.addPoint(340,410);
		p.addPoint(336,418);
		p.addPoint(333,421);
		p.addPoint(333,424);
		p.addPoint(334,426);
		p.addPoint(335,427);
		p.addPoint(338,433);
		p.addPoint(343,438);
		p.addPoint(348,439);
		p.addPoint(348,440);
		p.addPoint(346,442);
		p.addPoint(345,444);
		p.addPoint(345,446);
		p.addPoint(346,447);
		p.addPoint(348,448);
		p.addPoint(349,449);
		p.addPoint(350,455);
		p.addPoint(351,457);
		p.addPoint(352,458);
		p.addPoint(354,458);
		p.addPoint(354,457);
		p.addPoint(357,457);
		p.addPoint(357,458);
		p.addPoint(358,459);
		p.addPoint(359,461);
		p.addPoint(360,461);
		p.addPoint(361,460);
		p.addPoint(362,458);
		p.addPoint(362,457);
		p.addPoint(363,457);
		p.addPoint(363,458);
		p.addPoint(365,459);
		p.addPoint(366,459);
		p.addPoint(366,458);
		p.addPoint(362,450);
		p.addPoint(361,450);
		p.addPoint(361,448);
		p.addPoint(364,448);
		p.addPoint(364,449);
		p.addPoint(365,449);
		p.addPoint(365,447);
		p.addPoint(363,443);
		p.addPoint(359,441);
		p.addPoint(353,439);
		p.addPoint(353,437);
		p.addPoint(357,437);
		p.addPoint(357,436);
		p.addPoint(360,436);
		p.addPoint(360,437);
		p.addPoint(363,440);
		p.addPoint(370,441);
		p.addPoint(372,442);
		p.addPoint(373,443);
		p.addPoint(375,443);
		p.addPoint(375,442);
		p.addPoint(374,442);
		p.addPoint(374,438);
		p.addPoint(376,438);
		p.addPoint(376,436);
		p.addPoint(374,432);
		p.addPoint(370,430);
		p.addPoint(369,429);
		p.addPoint(367,428);
		p.addPoint(363,424);
		p.addPoint(361,420);
		p.addPoint(357,416);
		p.addPoint(356,416);
		p.addPoint(356,408);
		p.addPoint(358,408);
		p.addPoint(358,409);
		p.addPoint(361,412);
		p.addPoint(364,412);
		p.addPoint(367,411);
		p.addPoint(368,409);
		p.addPoint(368,407);
		p.addPoint(366,405);
		p.addPoint(366,404);
		p.addPoint(370,404);
		p.addPoint(371,403);
		p.addPoint(371,400);
		p.addPoint(379,400);
		p.addPoint(379,399);
		p.addPoint(384,399);
		p.addPoint(384,400);
		p.addPoint(390,400);
		p.addPoint(391,399);
		p.addPoint(392,396);
		p.addPoint(393,394);
		p.addPoint(394,391);
		p.addPoint(394,389);
		p.addPoint(392,387);
		p.addPoint(391,387);
		p.addPoint(388,393);
		p.addPoint(388,394);
		p.addPoint(378,394);
		p.addPoint(378,393);
		p.addPoint(371,393);
		p.addPoint(369,394);
		p.addPoint(362,395);
		p.addPoint(358,397);
		p.addPoint(356,399);
		p.addPoint(354,400);
		p.addPoint(350,401);
		p.addPoint(344,404);
		p.addPoint(342,405);
		p.addPoint(340,405);


		return p;	
	}

	
	static Polygon get_germany(){
		
		Polygon p = new Polygon();
	
		p.addPoint(239,223);
		p.addPoint(233,223);
		p.addPoint(233,225);
		p.addPoint(234,225);
		p.addPoint(234,229);
		p.addPoint(233,229);
		p.addPoint(232,230);
		p.addPoint(232,231);
		p.addPoint(233,233);
		p.addPoint(234,233);
		p.addPoint(234,234);
		p.addPoint(233,234);
		p.addPoint(231,236);
		p.addPoint(230,238);
		p.addPoint(229,239);
		p.addPoint(229,240);
		p.addPoint(227,240);
		p.addPoint(227,239);
		p.addPoint(224,238);
		p.addPoint(221,238);
		p.addPoint(220,239);
		p.addPoint(219,242);
		p.addPoint(218,244);
		p.addPoint(215,250);
		p.addPoint(215,253);
		p.addPoint(216,253);
		p.addPoint(216,256);
		p.addPoint(215,256);
		p.addPoint(213,257);
		p.addPoint(212,258);
		p.addPoint(211,260);
		p.addPoint(208,261);
		p.addPoint(207,263);
		p.addPoint(206,268);
		p.addPoint(206,276);
		p.addPoint(207,276);
		p.addPoint(207,278);
		p.addPoint(206,278);
		p.addPoint(205,280);
		p.addPoint(205,284);
		p.addPoint(206,290);
		p.addPoint(210,294);
		p.addPoint(218,298);
		p.addPoint(219,300);
		p.addPoint(220,300);
		p.addPoint(220,301);
		p.addPoint(219,301);
		p.addPoint(217,303);
		p.addPoint(216,306);
		p.addPoint(215,310);
		p.addPoint(215,315);
		p.addPoint(216,316);
		p.addPoint(227,317);
		p.addPoint(228,318);
		p.addPoint(230,319);
		p.addPoint(231,319);
		p.addPoint(231,318);
		p.addPoint(234,318);
		p.addPoint(234,319);
		p.addPoint(236,320);
		p.addPoint(237,321);
		p.addPoint(238,321);
		p.addPoint(239,320);
		p.addPoint(239,319);
		p.addPoint(241,319);
		p.addPoint(241,320);
		p.addPoint(243,321);
		p.addPoint(246,321);
		p.addPoint(249,320);
		p.addPoint(251,319);
		p.addPoint(254,318);
		p.addPoint(254,317);
		p.addPoint(257,317);
		p.addPoint(257,318);
		p.addPoint(261,318);
		p.addPoint(261,317);
		p.addPoint(260,314);
		p.addPoint(259,314);
		p.addPoint(259,312);
		p.addPoint(260,312);
		p.addPoint(266,306);
		p.addPoint(268,305);
		p.addPoint(268,303);
		p.addPoint(267,302);
		p.addPoint(265,301);
		p.addPoint(259,295);
		p.addPoint(257,289);
		p.addPoint(256,288);
		p.addPoint(255,286);
		p.addPoint(254,286);
		p.addPoint(254,283);
		p.addPoint(259,283);
		p.addPoint(263,282);
		p.addPoint(266,281);
		p.addPoint(268,279);
		p.addPoint(272,277);
		p.addPoint(273,275);
		p.addPoint(273,274);
		p.addPoint(274,274);
		p.addPoint(274,275);
		p.addPoint(275,276);
		p.addPoint(277,276);
		p.addPoint(278,275);
		p.addPoint(278,272);
		p.addPoint(277,269);
		p.addPoint(276,267);
		p.addPoint(275,260);
		p.addPoint(274,253);
		p.addPoint(273,251);
		p.addPoint(272,251);
		p.addPoint(272,248);
		p.addPoint(273,248);
		p.addPoint(273,241);
		p.addPoint(272,238);
		p.addPoint(271,236);
		p.addPoint(269,235);
		p.addPoint(268,234);
		p.addPoint(267,234);
		p.addPoint(267,233);
		p.addPoint(268,233);
		p.addPoint(269,232);
		p.addPoint(269,231);
		p.addPoint(268,229);
		p.addPoint(266,229);
		p.addPoint(264,231);
		p.addPoint(262,232);
		p.addPoint(259,233);
		p.addPoint(253,236);
		p.addPoint(253,237);
		p.addPoint(250,237);
		p.addPoint(250,236);
		p.addPoint(247,235);
		p.addPoint(247,234);
		p.addPoint(248,234);
		p.addPoint(248,232);
		p.addPoint(242,229);
		p.addPoint(241,229);
		p.addPoint(241,227);
		p.addPoint(242,227);
		p.addPoint(242,225);
		p.addPoint(241,224);
		p.addPoint(239,223);

		return p;	
	}
	
	
	static Polygon get_daenemark(){
		
		Polygon p = new Polygon();
	
		p.addPoint(248,189);
		p.addPoint(246,189);
		p.addPoint(243,190);
		p.addPoint(242,191);
		p.addPoint(241,193);
		p.addPoint(235,195);
		p.addPoint(234,196);
		p.addPoint(232,197);
		p.addPoint(231,199);
		p.addPoint(230,205);
		p.addPoint(230,214);
		p.addPoint(233,217);
		p.addPoint(234,217);
		p.addPoint(234,220);
		p.addPoint(233,220);
		p.addPoint(233,222);
		p.addPoint(238,222);
		p.addPoint(239,221);
		p.addPoint(244,211);
		p.addPoint(244,209);
		p.addPoint(246,209);
		p.addPoint(249,207);
		p.addPoint(249,203);
		p.addPoint(246,202);
		p.addPoint(245,202);
		p.addPoint(245,200);
		p.addPoint(246,200);
		p.addPoint(247,197);
		p.addPoint(248,195);
		p.addPoint(248,189);


		return p;	
	}
	
	
	static Polygon get_croatia(){
		
		Polygon p = new Polygon();
	
		p.addPoint(290,331);
		p.addPoint(289,334);
		p.addPoint(288,334);
		p.addPoint(284,336);
		p.addPoint(283,337);
		p.addPoint(282,339);
		p.addPoint(281,345);
		p.addPoint(280,348);
		p.addPoint(279,348);
		p.addPoint(279,347);
		p.addPoint(275,345);
		p.addPoint(273,345);
		p.addPoint(271,346);
		p.addPoint(270,347);
		p.addPoint(267,348);
		p.addPoint(265,349);
		p.addPoint(265,350);
		p.addPoint(266,353);
		p.addPoint(267,354);
		p.addPoint(268,356);
		p.addPoint(269,356);
		p.addPoint(271,354);
		p.addPoint(271,350);
		p.addPoint(274,350);
		p.addPoint(274,351);
		p.addPoint(276,353);
		p.addPoint(278,354);
		p.addPoint(279,360);
		p.addPoint(281,362);
		p.addPoint(282,368);
		p.addPoint(286,370);
		p.addPoint(289,373);
		p.addPoint(295,375);
		p.addPoint(303,379);
		p.addPoint(305,381);
		p.addPoint(306,383);
		p.addPoint(308,385);
		p.addPoint(310,386);
		p.addPoint(311,386);
		p.addPoint(312,384);
		p.addPoint(312,383);
		p.addPoint(308,381);
		p.addPoint(307,380);
		p.addPoint(305,379);
		p.addPoint(303,377);
		p.addPoint(302,375);
		p.addPoint(301,374);
		p.addPoint(300,372);
		p.addPoint(299,371);
		p.addPoint(297,370);
		p.addPoint(294,367);
		p.addPoint(293,365);
		p.addPoint(290,362);
		p.addPoint(289,359);
		p.addPoint(288,356);
		p.addPoint(286,355);
		p.addPoint(285,355);
		p.addPoint(285,353);
		p.addPoint(286,353);
		p.addPoint(287,350);
		p.addPoint(287,349);
		p.addPoint(290,349);
		p.addPoint(290,350);
		p.addPoint(291,351);
		p.addPoint(292,351);
		p.addPoint(293,349);
		p.addPoint(293,348);
		p.addPoint(300,348);
		p.addPoint(300,349);
		p.addPoint(304,350);
		p.addPoint(314,351);
		p.addPoint(315,353);
		p.addPoint(317,353);
		p.addPoint(318,351);
		p.addPoint(320,350);
		p.addPoint(320,349);
		p.addPoint(317,348);
		p.addPoint(315,348);
		p.addPoint(315,342);
		p.addPoint(314,341);
		p.addPoint(312,341);
		p.addPoint(310,342);
		p.addPoint(307,343);
		p.addPoint(307,344);
		p.addPoint(305,344);
		p.addPoint(305,343);
		p.addPoint(303,341);
		p.addPoint(301,340);
		p.addPoint(292,331);
		p.addPoint(290,331);


		return p;	
	}
	
	
	static Polygon get_bosnien(){
	
		Polygon p = new Polygon();
	
		p.addPoint(300,349);
		p.addPoint(293,349);
		p.addPoint(292,351);
		p.addPoint(292,352);
		p.addPoint(291,352);
		p.addPoint(291,351);
		p.addPoint(290,350);
		p.addPoint(287,350);
		p.addPoint(286,353);
		p.addPoint(286,355);
		p.addPoint(288,356);
		p.addPoint(289,359);
		p.addPoint(290,362);
		p.addPoint(293,365);
		p.addPoint(294,367);
		p.addPoint(297,370);
		p.addPoint(299,371);
		p.addPoint(301,371);
		p.addPoint(301,374);
		p.addPoint(302,375);
		p.addPoint(303,377);
		p.addPoint(305,379);
		p.addPoint(307,380);
		p.addPoint(308,381);
		p.addPoint(310,382);
		p.addPoint(312,383);
		p.addPoint(313,383);
		p.addPoint(313,380);
		p.addPoint(312,380);
		p.addPoint(312,377);
		p.addPoint(314,377);
		p.addPoint(315,376);
		p.addPoint(315,375);
		p.addPoint(314,373);
		p.addPoint(313,373);
		p.addPoint(313,371);
		p.addPoint(314,371);
		p.addPoint(314,370);
		p.addPoint(316,370);
		p.addPoint(316,371);
		p.addPoint(317,371);
		p.addPoint(320,370);
		p.addPoint(322,369);
		p.addPoint(322,368);
		p.addPoint(321,366);
		p.addPoint(320,366);
		p.addPoint(320,364);
		p.addPoint(323,364);
		p.addPoint(323,363);
		p.addPoint(319,361);
		p.addPoint(318,361);
		p.addPoint(318,360);
		p.addPoint(319,360);
		p.addPoint(321,356);
		p.addPoint(321,354);
		p.addPoint(319,353);
		p.addPoint(317,353);
		p.addPoint(317,354);
		p.addPoint(315,354);
		p.addPoint(315,353);
		p.addPoint(314,351);
		p.addPoint(304,350);
		p.addPoint(300,349);


		return p;	
	}
	
	
	static Polygon get_serbien(){
	
		Polygon p = new Polygon();
	
		p.addPoint(327,337);
		p.addPoint(324,337);
		p.addPoint(320,338);
		p.addPoint(318,339);
		p.addPoint(315,340);
		p.addPoint(315,342);
		p.addPoint(316,347);
		p.addPoint(317,348);
		p.addPoint(320,349);
		p.addPoint(321,349);
		p.addPoint(321,350);
		p.addPoint(320,350);
		p.addPoint(318,351);
		p.addPoint(318,352);
		p.addPoint(319,353);
		p.addPoint(321,354);
		p.addPoint(322,354);
		p.addPoint(322,356);
		p.addPoint(321,356);
		p.addPoint(319,360);
		p.addPoint(319,361);
		p.addPoint(323,363);
		p.addPoint(324,363);
		p.addPoint(324,365);
		p.addPoint(321,365);
		p.addPoint(321,366);
		p.addPoint(322,368);
		p.addPoint(323,368);
		p.addPoint(323,370);
		p.addPoint(320,370);
		p.addPoint(318,371);
		p.addPoint(318,372);
		p.addPoint(330,378);
		p.addPoint(331,378);
		p.addPoint(331,379);
		p.addPoint(330,379);
		p.addPoint(329,381);
		p.addPoint(329,383);
		p.addPoint(332,386);
		p.addPoint(334,390);
		p.addPoint(335,390);
		p.addPoint(336,388);
		p.addPoint(338,386);
		p.addPoint(338,385);
		p.addPoint(341,385);
		p.addPoint(341,386);
		p.addPoint(342,386);
		p.addPoint(343,384);
		p.addPoint(351,383);
		p.addPoint(352,380);
		p.addPoint(353,378);
		p.addPoint(353,375);
		p.addPoint(352,373);
		p.addPoint(350,367);
		p.addPoint(349,367);
		p.addPoint(349,365);
		p.addPoint(350,365);
		p.addPoint(352,361);
		p.addPoint(352,360);
		p.addPoint(351,358);
		p.addPoint(350,357);
		p.addPoint(349,354);
		p.addPoint(348,354);
		p.addPoint(346,355);
		p.addPoint(346,356);
		p.addPoint(344,356);
		p.addPoint(344,355);
		p.addPoint(340,353);
		p.addPoint(339,350);
		p.addPoint(337,348);
		p.addPoint(335,347);
		p.addPoint(331,339);
		p.addPoint(327,337);


		return p;	
	}
	
	
	static Polygon get_bulgaria(){
	
		Polygon p = new Polygon();
	
		p.addPoint(350,365);
		p.addPoint(350,367);
		p.addPoint(352,373);
		p.addPoint(353,375);
		p.addPoint(354,375);
		p.addPoint(354,378);
		p.addPoint(353,378);
		p.addPoint(352,380);
		p.addPoint(352,386);
		p.addPoint(356,388);
		p.addPoint(357,390);
		p.addPoint(358,394);
		p.addPoint(359,396);
		p.addPoint(360,396);
		p.addPoint(362,395);
		p.addPoint(369,394);
		p.addPoint(371,393);
		p.addPoint(371,392);
		p.addPoint(378,392);
		p.addPoint(378,393);
		p.addPoint(388,393);
		p.addPoint(391,387);
		p.addPoint(392,386);
		p.addPoint(398,383);
		p.addPoint(406,382);
		p.addPoint(406,381);
		p.addPoint(401,376);
		p.addPoint(400,376);
		p.addPoint(400,375);
		p.addPoint(401,375);
		p.addPoint(402,374);
		p.addPoint(403,372);
		p.addPoint(404,371);
		p.addPoint(405,364);
		p.addPoint(406,363);
		p.addPoint(408,362);
		p.addPoint(408,358);
		p.addPoint(406,358);
		p.addPoint(406,359);
		p.addPoint(405,359);
		p.addPoint(405,358);
		p.addPoint(403,357);
		p.addPoint(397,356);
		p.addPoint(390,356);
		p.addPoint(387,357);
		p.addPoint(386,358);
		p.addPoint(385,360);
		p.addPoint(383,362);
		p.addPoint(381,363);
		p.addPoint(367,364);
		p.addPoint(367,365);
		p.addPoint(356,365);
		p.addPoint(356,364);
		p.addPoint(354,363);
		p.addPoint(353,362);
		p.addPoint(352,362);
		p.addPoint(351,363);
		p.addPoint(350,365);

		
		return p;	
	}
	
	
	static Polygon get_romania(){
	
		Polygon p = new Polygon();
	
		p.addPoint(359,311);
		p.addPoint(349,311);
		p.addPoint(347,312);
		p.addPoint(346,314);
		p.addPoint(343,315);
		p.addPoint(342,316);
		p.addPoint(341,318);
		p.addPoint(339,322);
		p.addPoint(338,325);
		p.addPoint(337,327);
		p.addPoint(336,330);
		p.addPoint(334,334);
		p.addPoint(329,337);
		p.addPoint(329,338);
		p.addPoint(331,339);
		p.addPoint(335,347);
		p.addPoint(339,349);
		p.addPoint(339,350);
		p.addPoint(340,353);
		p.addPoint(344,355);
		p.addPoint(346,355);
		p.addPoint(348,354);
		p.addPoint(348,353);
		p.addPoint(350,353);
		p.addPoint(350,357);
		p.addPoint(351,358);
		p.addPoint(352,360);
		p.addPoint(353,362);
		p.addPoint(354,363);
		p.addPoint(356,364);
		p.addPoint(367,364);
		p.addPoint(381,363);
		p.addPoint(383,362);
		p.addPoint(385,360);
		p.addPoint(386,358);
		p.addPoint(387,357);
		p.addPoint(390,356);
		p.addPoint(390,355);
		p.addPoint(397,355);
		p.addPoint(397,356);
		p.addPoint(403,357);
		p.addPoint(405,358);
		p.addPoint(406,358);
		p.addPoint(408,357);
		p.addPoint(408,353);
		p.addPoint(407,353);
		p.addPoint(407,348);
		p.addPoint(408,348);
		p.addPoint(409,346);
		p.addPoint(409,344);
		p.addPoint(411,344);
		p.addPoint(413,343);
		p.addPoint(414,342);
		p.addPoint(414,336);
		p.addPoint(413,334);
		p.addPoint(411,334);
		p.addPoint(406,337);
		p.addPoint(406,338);
		p.addPoint(402,338);
		p.addPoint(402,337);
		p.addPoint(401,336);
		p.addPoint(400,334);
		p.addPoint(399,333);
		p.addPoint(398,331);
		p.addPoint(397,322);
		p.addPoint(395,318);
		p.addPoint(392,315);
		p.addPoint(391,313);
		p.addPoint(388,310);
		p.addPoint(386,306);
		p.addPoint(384,304);
		p.addPoint(378,304);
		p.addPoint(368,309);
		p.addPoint(367,311);
		p.addPoint(367,312);
		p.addPoint(366,312);
		p.addPoint(366,311);
		p.addPoint(364,310);
		p.addPoint(363,309);
		p.addPoint(361,309);
		p.addPoint(359,310);
		p.addPoint(359,311);


		return p;	
	}
	
	
	static Polygon get_moldova(){
	
		Polygon p = new Polygon();
	
		p.addPoint(401,304);
		p.addPoint(394,303);
		p.addPoint(392,302);
		p.addPoint(389,301);
		p.addPoint(386,301);
		p.addPoint(384,303);
		p.addPoint(384,304);
		p.addPoint(386,306);
		p.addPoint(388,310);
		p.addPoint(391,313);
		p.addPoint(392,315);
		p.addPoint(395,318);
		p.addPoint(397,322);
		p.addPoint(398,331);
		p.addPoint(399,333);
		p.addPoint(400,334);
		p.addPoint(401,336);
		p.addPoint(402,337);
		p.addPoint(404,337);
		p.addPoint(405,333);
		p.addPoint(406,330);
		p.addPoint(406,328);
		p.addPoint(405,328);
		p.addPoint(405,325);
		p.addPoint(406,325);
		p.addPoint(407,323);
		p.addPoint(407,322);
		p.addPoint(408,322);
		p.addPoint(408,323);
		p.addPoint(409,323);
		p.addPoint(409,322);
		p.addPoint(412,322);
		p.addPoint(412,323);
		p.addPoint(414,323);
		p.addPoint(415,322);
		p.addPoint(415,321);
		p.addPoint(413,317);
		p.addPoint(409,315);
		p.addPoint(408,312);
		p.addPoint(405,311);
		p.addPoint(404,304);
		p.addPoint(403,304);
		p.addPoint(403,305);
		p.addPoint(401,305);
		p.addPoint(401,304);


		return p;	
	}
	
	
	static Polygon get_montenegro(){
		
		Polygon p = new Polygon();
	
		p.addPoint(316,371);
		p.addPoint(314,371);
		p.addPoint(314,373);
		p.addPoint(315,375);
		p.addPoint(316,375);
		p.addPoint(316,377);
		p.addPoint(314,377);
		p.addPoint(313,378);
		p.addPoint(313,380);
		p.addPoint(314,380);
		p.addPoint(314,383);
		p.addPoint(313,383);
		p.addPoint(312,384);
		p.addPoint(312,387);
		p.addPoint(315,388);
		p.addPoint(316,389);
		p.addPoint(317,391);
		p.addPoint(318,392);
		p.addPoint(320,393);
		p.addPoint(322,393);
		p.addPoint(323,391);
		p.addPoint(324,385);
		p.addPoint(325,383);
		p.addPoint(328,382);
		p.addPoint(329,381);
		p.addPoint(330,379);
		p.addPoint(330,378);
		p.addPoint(320,373);
		p.addPoint(317,372);
		p.addPoint(316,371);


		return p;	
	}
	
	
	static Polygon get_albania(){
		
		Polygon p = new Polygon();
		
		p.addPoint(329,383);
		p.addPoint(325,383);
		p.addPoint(324,385);
		p.addPoint(323,391);
		p.addPoint(323,394);
		p.addPoint(324,395);
		p.addPoint(325,395);
		p.addPoint(325,401);
		p.addPoint(324,401);
		p.addPoint(324,415);
		p.addPoint(325,416);
		p.addPoint(327,417);
		p.addPoint(330,420);
		p.addPoint(331,421);
		p.addPoint(333,421);
		p.addPoint(336,418);
		p.addPoint(340,410);
		p.addPoint(340,407);
		p.addPoint(339,404);
		p.addPoint(337,403);
		p.addPoint(336,402);
		p.addPoint(335,400);
		p.addPoint(334,390);
		p.addPoint(332,386);
		p.addPoint(329,383);

		return p;	
	}
	
	
	static Polygon get_macedonia(){
		
		Polygon p = new Polygon();
	
		p.addPoint(351,384);
		p.addPoint(343,384);
		p.addPoint(342,386);
		p.addPoint(342,387);
		p.addPoint(341,387);
		p.addPoint(341,386);
		p.addPoint(338,386);
		p.addPoint(336,388);
		p.addPoint(335,390);
		p.addPoint(335,400);
		p.addPoint(336,402);
		p.addPoint(337,403);
		p.addPoint(339,404);
		p.addPoint(344,404);
		p.addPoint(350,401);
		p.addPoint(354,400);
		p.addPoint(356,399);
		p.addPoint(358,397);
		p.addPoint(358,394);
		p.addPoint(357,390);
		p.addPoint(356,388);
		p.addPoint(352,386);
		p.addPoint(351,384);


		return p;	
	}
	
	
	static Polygon get_portugal(){
		
		Polygon p = new Polygon();
	
		p.addPoint(55,355);
		p.addPoint(54,355);
		p.addPoint(50,357);
		p.addPoint(49,358);
		p.addPoint(48,362);
		p.addPoint(47,365);
		p.addPoint(46,367);
		p.addPoint(46,368);
		p.addPoint(47,368);
		p.addPoint(46,370);
		p.addPoint(45,371);
		p.addPoint(41,379);
		p.addPoint(40,382);
		p.addPoint(39,384);
		p.addPoint(38,384);
		p.addPoint(35,385);
		p.addPoint(34,386);
		p.addPoint(33,387);
		p.addPoint(32,389);
		p.addPoint(32,393);
		p.addPoint(33,396);
		p.addPoint(34,397);
		p.addPoint(37,397);
		p.addPoint(37,399);
		p.addPoint(36,399);
		p.addPoint(34,403);
		p.addPoint(33,406);
		p.addPoint(31,410);
		p.addPoint(30,411);
		p.addPoint(29,413);
		p.addPoint(29,414);
		p.addPoint(30,415);
		p.addPoint(35,416);
		p.addPoint(37,417);
		p.addPoint(45,417);
		p.addPoint(46,416);
		p.addPoint(47,413);
		p.addPoint(51,411);
		p.addPoint(52,410);
		p.addPoint(53,408);
		p.addPoint(53,405);
		p.addPoint(52,405);
		p.addPoint(52,401);
		p.addPoint(53,401);
		p.addPoint(55,399);
		p.addPoint(55,389);
		p.addPoint(57,389);
		p.addPoint(60,388);
		p.addPoint(62,386);
		p.addPoint(64,382);
		p.addPoint(65,379);
		p.addPoint(67,375);
		p.addPoint(70,372);
		p.addPoint(72,371);
		p.addPoint(74,369);
		p.addPoint(74,368);
		p.addPoint(73,365);
		p.addPoint(72,363);
		p.addPoint(71,362);
		p.addPoint(64,360);
		p.addPoint(57,359);
		p.addPoint(55,355);


		return p;	
	}
	
	
	static Polygon get_slovenia(){
		
		Polygon p = new Polygon();
	
		p.addPoint(288,329);
		p.addPoint(284,331);
		p.addPoint(279,332);
		p.addPoint(275,334);
		p.addPoint(275,335);
		p.addPoint(270,335);
		p.addPoint(270,334);
		p.addPoint(267,334);
		p.addPoint(267,341);
		p.addPoint(268,347);
		p.addPoint(270,347);
		p.addPoint(271,346);
		p.addPoint(273,345);
		p.addPoint(273,344);
		p.addPoint(279,347);
		p.addPoint(280,347);
		p.addPoint(281,345);
		p.addPoint(282,339);
		p.addPoint(283,336);
		p.addPoint(284,336);
		p.addPoint(288,334);
		p.addPoint(289,333);
		p.addPoint(290,331);
		p.addPoint(290,329);
		p.addPoint(288,329);


		return p;	
	}
	
	
	static Polygon get_hungary(){
		
		Polygon p = new Polygon();
	
		p.addPoint(298,314);
		p.addPoint(297,318);
		p.addPoint(295,318);
		p.addPoint(294,319);
		p.addPoint(293,321);
		p.addPoint(292,327);
		p.addPoint(290,328);
		p.addPoint(290,329);
		p.addPoint(301,340);
		p.addPoint(303,341);
		p.addPoint(305,343);
		p.addPoint(307,343);
		p.addPoint(310,342);
		p.addPoint(312,341);
		p.addPoint(315,340);
		p.addPoint(318,339);
		p.addPoint(320,338);
		p.addPoint(324,337);
		p.addPoint(324,336);
		p.addPoint(327,336);
		p.addPoint(327,337);
		p.addPoint(328,337);
		p.addPoint(330,336);
		p.addPoint(334,334);
		p.addPoint(336,330);
		p.addPoint(337,327);
		p.addPoint(338,325);
		p.addPoint(339,322);
		p.addPoint(342,316);
		p.addPoint(344,314);
		p.addPoint(346,314);
		p.addPoint(347,312);
		p.addPoint(347,311);
		p.addPoint(346,309);
		p.addPoint(342,307);
		p.addPoint(339,306);
		p.addPoint(335,305);
		p.addPoint(331,305);
		p.addPoint(328,306);
		p.addPoint(325,309);
		p.addPoint(319,311);
		p.addPoint(309,316);
		p.addPoint(309,317);
		p.addPoint(303,317);
		p.addPoint(303,316);
		p.addPoint(301,315);
		p.addPoint(300,314);
		p.addPoint(298,314);


		return p;	
	}
	
	
	static Polygon get_slovakia(){
		
		Polygon p = new Polygon();
	
		p.addPoint(317,293);
		p.addPoint(316,293);
		p.addPoint(312,295);
		p.addPoint(311,296);
		p.addPoint(309,297);
		p.addPoint(308,298);
		p.addPoint(307,301);
		p.addPoint(305,305);
		p.addPoint(305,306);
		p.addPoint(302,306);
		p.addPoint(302,305);
		p.addPoint(298,305);
		p.addPoint(296,307);
		p.addPoint(296,309);
		p.addPoint(297,311);
		p.addPoint(298,313);
		p.addPoint(300,313);
		p.addPoint(300,314);
		p.addPoint(301,315);
		p.addPoint(303,316);
		p.addPoint(309,316);
		p.addPoint(319,311);
		p.addPoint(325,309);
		p.addPoint(328,306);
		p.addPoint(331,305);
		p.addPoint(331,304);
		p.addPoint(339,306);
		p.addPoint(340,306);
		p.addPoint(341,304);
		p.addPoint(342,299);
		p.addPoint(342,297);
		p.addPoint(340,296);
		p.addPoint(339,294);
		p.addPoint(336,293);
		p.addPoint(333,293);
		p.addPoint(331,294);
		p.addPoint(325,295);
		p.addPoint(323,297);
		p.addPoint(323,298);
		p.addPoint(322,298);
		p.addPoint(322,297);
		p.addPoint(321,296);
		p.addPoint(319,295);
		p.addPoint(317,293);

		
		return p;	
	}
	
	
	static Polygon get_czeck_rep(){
		
		Polygon p = new Polygon();
	
		p.addPoint(273,275);
		p.addPoint(272,277);
		p.addPoint(268,279);
		p.addPoint(266,281);
		p.addPoint(263,282);
		p.addPoint(259,283);
		p.addPoint(255,284);
		p.addPoint(255,286);
		p.addPoint(256,288);
		p.addPoint(257,289);
		p.addPoint(259,295);
		p.addPoint(265,301);
		p.addPoint(267,302);
		p.addPoint(269,304);
		p.addPoint(273,306);
		p.addPoint(275,306);
		p.addPoint(277,305);
		p.addPoint(280,302);
		p.addPoint(280,301);
		p.addPoint(282,301);
		p.addPoint(282,302);
		p.addPoint(288,304);
		p.addPoint(291,304);
		p.addPoint(291,303);
		p.addPoint(294,303);
		p.addPoint(294,305);
		p.addPoint(295,307);
		p.addPoint(296,307);
		p.addPoint(298,305);
		p.addPoint(298,304);
		p.addPoint(302,304);
		p.addPoint(302,305);
		p.addPoint(305,305);
		p.addPoint(307,301);
		p.addPoint(308,298);
		p.addPoint(309,297);
		p.addPoint(311,296);
		p.addPoint(312,295);
		p.addPoint(312,294);
		p.addPoint(308,292);
		p.addPoint(307,291);
		p.addPoint(305,290);
		p.addPoint(303,288);
		p.addPoint(302,286);
		p.addPoint(301,285);
		p.addPoint(299,284);
		p.addPoint(296,283);
		p.addPoint(295,283);
		p.addPoint(294,285);
		p.addPoint(294,286);
		p.addPoint(292,286);
		p.addPoint(292,285);
		p.addPoint(291,284);
		p.addPoint(289,280);
		p.addPoint(288,279);
		p.addPoint(286,278);
		p.addPoint(282,277);
		p.addPoint(281,276);
		p.addPoint(280,276);
		p.addPoint(280,277);
		p.addPoint(275,277);
		p.addPoint(275,276);
		p.addPoint(274,275);
		p.addPoint(273,275);


		return p;	
	}
	
	
	static Polygon get_austria(){
		
		Polygon p = new Polygon();
	
		p.addPoint(271,305);
		p.addPoint(268,305);
		p.addPoint(266,306);
		p.addPoint(260,312);
		p.addPoint(260,314);
		p.addPoint(261,317);
		p.addPoint(262,317);
		p.addPoint(262,319);
		p.addPoint(257,318);
		p.addPoint(254,318);
		p.addPoint(251,319);
		p.addPoint(249,320);
		p.addPoint(246,321);
		p.addPoint(246,322);
		p.addPoint(243,322);
		p.addPoint(243,321);
		p.addPoint(241,320);
		p.addPoint(239,320);
		p.addPoint(238,321);
		p.addPoint(238,322);
		p.addPoint(237,322);
		p.addPoint(237,321);
		p.addPoint(236,320);
		p.addPoint(234,319);
		p.addPoint(231,319);
		p.addPoint(231,325);
		p.addPoint(232,326);
		p.addPoint(236,328);
		p.addPoint(242,328);
		p.addPoint(246,327);
		p.addPoint(246,326);
		p.addPoint(253,326);
		p.addPoint(253,327);
		p.addPoint(254,328);
		p.addPoint(255,330);
		p.addPoint(259,332);
		p.addPoint(263,333);
		p.addPoint(270,334);
		p.addPoint(275,334);
		p.addPoint(279,332);
		p.addPoint(284,331);
		p.addPoint(292,327);
		p.addPoint(293,321);
		p.addPoint(295,317);
		p.addPoint(297,317);
		p.addPoint(297,311);
		p.addPoint(294,305);
		p.addPoint(293,304);
		p.addPoint(291,304);
		p.addPoint(291,305);
		p.addPoint(282,302);
		p.addPoint(280,302);
		p.addPoint(277,305);
		p.addPoint(275,306);
		p.addPoint(275,307);
		p.addPoint(271,305);

		
		return p;	
	}
	
	
	static Polygon get_switzerland(){
		
		Polygon p = new Polygon();
	
		p.addPoint(210,317);
		p.addPoint(208,317);
		p.addPoint(207,319);
		p.addPoint(206,320);
		p.addPoint(205,322);
		p.addPoint(202,325);
		p.addPoint(201,327);
		p.addPoint(199,329);
		p.addPoint(199,332);
		p.addPoint(201,332);
		p.addPoint(202,331);
		p.addPoint(202,330);
		p.addPoint(205,330);
		p.addPoint(205,335);
		p.addPoint(206,337);
		p.addPoint(215,337);
		p.addPoint(216,335);
		p.addPoint(217,334);
		p.addPoint(217,333);
		p.addPoint(220,333);
		p.addPoint(220,334);
		p.addPoint(224,338);
		p.addPoint(225,338);
		p.addPoint(226,337);
		p.addPoint(227,335);
		p.addPoint(228,334);
		p.addPoint(228,333);
		p.addPoint(232,333);
		p.addPoint(232,334);
		p.addPoint(235,334);
		p.addPoint(236,331);
		p.addPoint(236,328);
		p.addPoint(232,326);
		p.addPoint(231,325);
		p.addPoint(230,319);
		p.addPoint(228,318);
		p.addPoint(227,317);
		p.addPoint(216,316);
		p.addPoint(214,316);
		p.addPoint(212,317);
		p.addPoint(212,318);
		p.addPoint(210,318);
		p.addPoint(210,317);


		return p;	
	}


	static Polygon get_polland(){
	
	Polygon p = new Polygon();

	p.addPoint(304,225);
	p.addPoint(303,225);
	p.addPoint(300,226);
	p.addPoint(297,227);
	p.addPoint(294,228);
	p.addPoint(292,229);
	p.addPoint(291,230);
	p.addPoint(289,231);
	p.addPoint(288,232);
	p.addPoint(285,233);
	p.addPoint(281,234);
	p.addPoint(279,235);
	p.addPoint(278,236);
	p.addPoint(276,237);
	p.addPoint(275,238);
	p.addPoint(273,239);
	p.addPoint(273,241);
	p.addPoint(274,241);
	p.addPoint(274,248);
	p.addPoint(273,248);
	p.addPoint(273,251);
	p.addPoint(274,253);
	p.addPoint(275,260);
	p.addPoint(276,267);
	p.addPoint(277,269);
	p.addPoint(278,272);
	p.addPoint(279,272);
	p.addPoint(279,275);
	p.addPoint(278,275);
	p.addPoint(278,276);
	p.addPoint(280,276);
	p.addPoint(280,275);
	p.addPoint(281,275);
	p.addPoint(281,276);
	p.addPoint(282,277);
	p.addPoint(286,278);
	p.addPoint(288,279);
	p.addPoint(289,280);
	p.addPoint(290,282);
	p.addPoint(291,284);
	p.addPoint(292,285);
	p.addPoint(294,285);
	p.addPoint(294,282);
	p.addPoint(296,282);
	p.addPoint(296,283);
	p.addPoint(299,284);
	p.addPoint(301,285);
	p.addPoint(302,286);
	p.addPoint(303,288);
	p.addPoint(305,290);
	p.addPoint(307,291);
	p.addPoint(308,292);
	p.addPoint(312,294);
	p.addPoint(314,294);
	p.addPoint(316,293);
	p.addPoint(316,292);
	p.addPoint(317,292);
	p.addPoint(317,293);
	p.addPoint(319,295);
	p.addPoint(321,296);
	p.addPoint(322,297);
	p.addPoint(323,297);
	p.addPoint(325,295);
	p.addPoint(331,294);
	p.addPoint(333,293);
	p.addPoint(333,292);
	p.addPoint(336,292);
	p.addPoint(336,293);
	p.addPoint(339,294);
	p.addPoint(340,296);
	p.addPoint(342,296);
	p.addPoint(343,295);
	p.addPoint(344,293);
	p.addPoint(345,290);
	p.addPoint(349,282);
	p.addPoint(353,278);
	p.addPoint(353,276);
	p.addPoint(352,272);
	p.addPoint(350,268);
	p.addPoint(349,266);
	p.addPoint(348,265);
	p.addPoint(347,259);
	p.addPoint(346,258);
	p.addPoint(345,256);
	p.addPoint(344,256);
	p.addPoint(344,255);
	p.addPoint(345,255);
	p.addPoint(346,254);
	p.addPoint(347,252);
	p.addPoint(348,249);
	p.addPoint(348,244);
	p.addPoint(347,241);
	p.addPoint(346,239);
	p.addPoint(345,236);
	p.addPoint(344,234);
	p.addPoint(343,232);
	p.addPoint(339,228);
	p.addPoint(337,228);
	p.addPoint(333,229);
	p.addPoint(328,230);
	p.addPoint(328,231);
	p.addPoint(319,231);
	p.addPoint(319,230);
	p.addPoint(314,230);
	p.addPoint(312,231);
	p.addPoint(312,232);
	p.addPoint(306,232);
	p.addPoint(306,230);
	p.addPoint(305,226);
	p.addPoint(304,225);


	return p;	
	}


	static Polygon get_weissrussland(){
	
	Polygon p = new Polygon();

	p.addPoint(379,202);
	p.addPoint(373,202);
	p.addPoint(372,203);
	p.addPoint(371,207);
	p.addPoint(368,208);
	p.addPoint(367,209);
	p.addPoint(367,211);
	p.addPoint(364,211);
	p.addPoint(364,213);
	p.addPoint(366,214);
	p.addPoint(367,214);
	p.addPoint(367,215);
	p.addPoint(366,215);
	p.addPoint(365,217);
	p.addPoint(364,217);
	p.addPoint(363,218);
	p.addPoint(361,219);
	p.addPoint(361,229);
	p.addPoint(362,229);
	p.addPoint(362,231);
	p.addPoint(359,231);
	p.addPoint(359,230);
	p.addPoint(358,230);
	p.addPoint(356,232);
	p.addPoint(354,233);
	p.addPoint(354,234);
	p.addPoint(353,234);
	p.addPoint(353,233);
	p.addPoint(352,233);
	p.addPoint(351,234);
	p.addPoint(348,235);
	p.addPoint(346,236);
	p.addPoint(346,239);
	p.addPoint(347,241);
	p.addPoint(348,244);
	p.addPoint(349,244);
	p.addPoint(349,249);
	p.addPoint(348,249);
	p.addPoint(347,252);
	p.addPoint(346,254);
	p.addPoint(345,255);
	p.addPoint(345,256);
	p.addPoint(346,258);
	p.addPoint(347,259);
	p.addPoint(348,259);
	p.addPoint(349,266);
	p.addPoint(350,266);
	p.addPoint(351,265);
	p.addPoint(354,264);
	p.addPoint(355,263);
	p.addPoint(356,261);
	p.addPoint(358,260);
	p.addPoint(360,259);
	p.addPoint(365,258);
	p.addPoint(365,257);
	p.addPoint(368,257);
	p.addPoint(368,258);
	p.addPoint(371,259);
	p.addPoint(373,259);
	p.addPoint(373,258);
	p.addPoint(376,258);
	p.addPoint(376,259);
	p.addPoint(378,261);
	p.addPoint(380,261);
	p.addPoint(380,260);
	p.addPoint(381,260);
	p.addPoint(381,261);
	p.addPoint(385,261);
	p.addPoint(386,260);
	p.addPoint(386,259);
	p.addPoint(387,259);
	p.addPoint(387,260);
	p.addPoint(389,260);
	p.addPoint(389,259);
	p.addPoint(390,259);
	p.addPoint(390,260);
	p.addPoint(392,260);
	p.addPoint(392,258);
	p.addPoint(394,259);
	p.addPoint(395,260);
	p.addPoint(397,260);
	p.addPoint(400,259);
	p.addPoint(400,258);
	p.addPoint(404,258);
	p.addPoint(404,259);
	p.addPoint(405,259);
	p.addPoint(406,250);
	p.addPoint(408,248);
	p.addPoint(410,247);
	p.addPoint(412,246);
	p.addPoint(412,244);
	p.addPoint(411,242);
	p.addPoint(410,242);
	p.addPoint(409,240);
	p.addPoint(408,238);
	p.addPoint(407,236);
	p.addPoint(406,235);
	p.addPoint(405,235);
	p.addPoint(405,234);
	p.addPoint(406,234);
	p.addPoint(407,233);
	p.addPoint(414,232);
	p.addPoint(415,231);
	p.addPoint(416,229);
	p.addPoint(416,227);
	p.addPoint(414,226);
	p.addPoint(413,224);
	p.addPoint(411,224);
	p.addPoint(409,225);
	p.addPoint(409,226);
	p.addPoint(407,226);
	p.addPoint(407,223);
	p.addPoint(406,222);
	p.addPoint(404,221);
	p.addPoint(400,217);
	p.addPoint(399,215);
	p.addPoint(397,215);
	p.addPoint(397,209);
	p.addPoint(396,207);
	p.addPoint(395,205);
	p.addPoint(392,202);
	p.addPoint(390,202);
	p.addPoint(388,203);
	p.addPoint(387,204);
	p.addPoint(387,205);
	p.addPoint(385,205);
	p.addPoint(385,204);
	p.addPoint(384,202);
	p.addPoint(382,202);
	p.addPoint(382,203);
	p.addPoint(379,203);
	p.addPoint(379,202);


	return p;	
	}
	

	static Polygon get_estonia(){
	
	Polygon p = new Polygon();

	p.addPoint(354,159);
	p.addPoint(349,159);
	p.addPoint(346,160);
	p.addPoint(344,161);
	p.addPoint(341,162);
	p.addPoint(339,163);
	p.addPoint(337,165);
	p.addPoint(337,168);
	p.addPoint(338,174);
	p.addPoint(339,176);
	p.addPoint(343,177);
	p.addPoint(344,180);
	p.addPoint(345,183);
	p.addPoint(346,183);
	p.addPoint(348,181);
	p.addPoint(348,180);
	p.addPoint(353,180);
	p.addPoint(353,181);
	p.addPoint(357,183);
	p.addPoint(358,184);
	p.addPoint(360,185);
	p.addPoint(362,185);
	p.addPoint(365,184);
	p.addPoint(367,180);
	p.addPoint(367,177);
	p.addPoint(365,176);
	p.addPoint(364,175);
	p.addPoint(362,173);
	p.addPoint(361,170);
	p.addPoint(360,170);
	p.addPoint(360,167);
	p.addPoint(361,167);
	p.addPoint(363,166);
	p.addPoint(365,165);
	p.addPoint(366,164);
	p.addPoint(367,162);
	p.addPoint(367,160);
	p.addPoint(365,158);
	p.addPoint(363,158);
	p.addPoint(359,159);
	p.addPoint(359,160);
	p.addPoint(354,160);
	p.addPoint(354,159);


	return p;	
	}


	static Polygon get_lettland(){
	
	Polygon p = new Polygon();

	p.addPoint(353,181);
	p.addPoint(348,181);
	p.addPoint(345,184);
	p.addPoint(344,190);
	p.addPoint(343,191);
	p.addPoint(342,193);
	p.addPoint(342,194);
	p.addPoint(340,194);
	p.addPoint(340,193);
	p.addPoint(337,192);
	p.addPoint(336,191);
	p.addPoint(335,189);
	p.addPoint(334,188);
	p.addPoint(332,187);
	p.addPoint(329,187);
	p.addPoint(327,188);
	p.addPoint(326,189);
	p.addPoint(325,193);
	p.addPoint(324,196);
	p.addPoint(323,198);
	p.addPoint(323,208);
	p.addPoint(324,209);
	p.addPoint(325,209);
	p.addPoint(327,207);
	p.addPoint(329,206);
	p.addPoint(330,205);
	p.addPoint(333,204);
	p.addPoint(333,203);
	p.addPoint(335,203);
	p.addPoint(335,204);
	p.addPoint(337,204);
	p.addPoint(337,203);
	p.addPoint(344,203);
	p.addPoint(344,204);
	p.addPoint(348,204);
	p.addPoint(349,202);
	p.addPoint(349,201);
	p.addPoint(351,201);
	p.addPoint(351,202);
	p.addPoint(352,204);
	p.addPoint(358,205);
	p.addPoint(360,206);
	p.addPoint(361,207);
	p.addPoint(362,209);
	p.addPoint(364,210);
	p.addPoint(366,210);
	p.addPoint(368,208);
	p.addPoint(371,207);
	p.addPoint(372,203);
	p.addPoint(373,202);
	p.addPoint(375,201);
	p.addPoint(375,200);
	p.addPoint(372,194);
	p.addPoint(370,192);
	p.addPoint(369,187);
	p.addPoint(367,187);
	p.addPoint(367,186);
	p.addPoint(366,185);
	p.addPoint(362,185);
	p.addPoint(362,186);
	p.addPoint(360,186);
	p.addPoint(360,185);
	p.addPoint(358,184);
	p.addPoint(357,183);
	p.addPoint(353,181);


	return p;	
	}


	static Polygon get_litauen(){
	
	Polygon p = new Polygon();
	
	p.addPoint(351,202);
	p.addPoint(349,202);
	p.addPoint(348,204);
	p.addPoint(348,205);
	p.addPoint(344,205);
	p.addPoint(344,204);
	p.addPoint(337,204);
	p.addPoint(337,205);
	p.addPoint(335,205);
	p.addPoint(335,204);
	p.addPoint(333,204);
	p.addPoint(330,205);
	p.addPoint(329,206);
	p.addPoint(327,207);
	p.addPoint(324,210);
	p.addPoint(324,211);
	p.addPoint(325,211);
	p.addPoint(325,214);
	p.addPoint(324,214);
	p.addPoint(323,216);
	p.addPoint(323,217);
	p.addPoint(327,217);
	p.addPoint(327,218);
	p.addPoint(329,219);
	p.addPoint(337,220);
	p.addPoint(338,220);
	p.addPoint(338,227);
	p.addPoint(344,233);
	p.addPoint(345,233);
	p.addPoint(345,236);
	p.addPoint(346,236);
	p.addPoint(348,235);
	p.addPoint(351,234);
	p.addPoint(352,233);
	p.addPoint(352,232);
	p.addPoint(353,232);
	p.addPoint(353,233);
	p.addPoint(354,233);
	p.addPoint(356,232);
	p.addPoint(358,230);
	p.addPoint(358,229);
	p.addPoint(359,229);
	p.addPoint(359,230);
	p.addPoint(361,230);
	p.addPoint(361,229);
	p.addPoint(360,229);
	p.addPoint(360,219);
	p.addPoint(361,219);
	p.addPoint(363,218);
	p.addPoint(363,216);
	p.addPoint(365,216);
	p.addPoint(366,215);
	p.addPoint(366,214);
	p.addPoint(364,213);
	p.addPoint(363,213);
	p.addPoint(363,211);
	p.addPoint(364,211);
	p.addPoint(364,210);
	p.addPoint(362,209);
	p.addPoint(361,207);
	p.addPoint(360,206);
	p.addPoint(358,205);
	p.addPoint(352,204);
	p.addPoint(351,202);


	return p;	
	}


	static Polygon get_netherlands(){
	
	Polygon p = new Polygon();

	p.addPoint(202,245);
	p.addPoint(201,245);
	p.addPoint(199,247);
	p.addPoint(198,250);
	p.addPoint(197,252);
	p.addPoint(196,253);
	p.addPoint(195,255);
	p.addPoint(188,262);
	p.addPoint(188,264);
	p.addPoint(189,265);
	p.addPoint(190,265);
	p.addPoint(194,264);
	p.addPoint(194,263);
	p.addPoint(197,263);
	p.addPoint(197,264);
	p.addPoint(199,265);
	p.addPoint(200,266);
	p.addPoint(202,267);
	p.addPoint(204,267);
	p.addPoint(204,273);
	p.addPoint(205,273);
	p.addPoint(206,268);
	p.addPoint(207,263);
	p.addPoint(207,260);
	p.addPoint(211,260);
	p.addPoint(212,258);
	p.addPoint(213,257);
	p.addPoint(215,256);
	p.addPoint(215,253);
	p.addPoint(214,253);
	p.addPoint(214,250);
	p.addPoint(215,250);
	p.addPoint(218,244);
	p.addPoint(218,243);
	p.addPoint(212,240);
	p.addPoint(210,240);
	p.addPoint(207,241);
	p.addPoint(206,242);
	p.addPoint(206,247);
	p.addPoint(208,248);
	p.addPoint(209,248);
	p.addPoint(209,250);
	p.addPoint(208,250);
	p.addPoint(207,252);
	p.addPoint(206,253);
	p.addPoint(204,254);
	p.addPoint(204,255);
	p.addPoint(203,255);
	p.addPoint(203,254);
	p.addPoint(201,252);
	p.addPoint(200,252);
	p.addPoint(200,250);
	p.addPoint(201,250);
	p.addPoint(201,246);
	p.addPoint(202,246);
	p.addPoint(202,245);


	return p;	
	}


	static Polygon get_belgium(){
	
	Polygon p = new Polygon();

	p.addPoint(197,264);
	p.addPoint(194,264);
	p.addPoint(190,265);
	p.addPoint(190,266);
	p.addPoint(189,266);
	p.addPoint(189,265);
	p.addPoint(188,264);
	p.addPoint(185,264);
	p.addPoint(183,265);
	p.addPoint(182,266);
	p.addPoint(181,269);
	p.addPoint(181,270);
	p.addPoint(184,270);
	p.addPoint(184,272);
	p.addPoint(185,274);
	p.addPoint(188,277);
	p.addPoint(189,280);
	p.addPoint(191,282);
	p.addPoint(194,282);
	p.addPoint(194,281);
	p.addPoint(195,281);
	p.addPoint(195,282);
	p.addPoint(196,283);
	p.addPoint(197,283);
	p.addPoint(197,285);
	p.addPoint(196,285);
	p.addPoint(196,286);
	p.addPoint(198,288);
	p.addPoint(200,288);	
	p.addPoint(202,287);
	p.addPoint(204,288);
	p.addPoint(205,288);
	p.addPoint(205,284);
	p.addPoint(205,280);
	p.addPoint(206,278);
	p.addPoint(206,276);
	p.addPoint(205,274);
	p.addPoint(204,273);
	p.addPoint(203,268);
	p.addPoint(202,267);
	p.addPoint(200,266);
	p.addPoint(199,265);
	p.addPoint(197,264);
	

	return p;	
	}


	static Polygon get_britain(){
	
	Polygon p = new Polygon();

	p.addPoint(147,159);
	p.addPoint(145,159);
	p.addPoint(144,161);
	p.addPoint(143,163);
	p.addPoint(142,164);
	p.addPoint(140,165);
	p.addPoint(138,166);
	p.addPoint(137,168);
	p.addPoint(136,169);
	p.addPoint(136,170);
	p.addPoint(135,170);
	p.addPoint(135,169);
	p.addPoint(133,168);
	p.addPoint(132,168);
	p.addPoint(132,171);
	p.addPoint(133,173);
	p.addPoint(135,174);
	p.addPoint(136,174);
	p.addPoint(136,176);
	p.addPoint(135,176);
	p.addPoint(134,178);
	p.addPoint(132,180);
	p.addPoint(131,182);
	p.addPoint(131,183);
	p.addPoint(133,183);
	p.addPoint(133,182);
	p.addPoint(135,182);
	p.addPoint(135,183);
	p.addPoint(136,183);
	p.addPoint(136,184);
	p.addPoint(135,184);
	p.addPoint(134,186);
	p.addPoint(132,188);
	p.addPoint(130,189);
	p.addPoint(129,190);
	p.addPoint(129,191);
	p.addPoint(132,191);
	p.addPoint(131,193);
	p.addPoint(131,195);
	p.addPoint(132,195);
	p.addPoint(133,193);
	p.addPoint(133,192);
	p.addPoint(135,192);
	p.addPoint(135,193);
	p.addPoint(136,196);
	p.addPoint(137,196);
	p.addPoint(137,198);
	p.addPoint(136,198);
	p.addPoint(135,200);
	p.addPoint(134,201);
	p.addPoint(133,203);
	p.addPoint(133,208);
	p.addPoint(138,208);
	p.addPoint(138,207);
	p.addPoint(143,207);
	p.addPoint(143,208);
	p.addPoint(144,208);
	p.addPoint(144,209);
	p.addPoint(143,209);
	p.addPoint(142,211);
	p.addPoint(142,213);
	p.addPoint(143,215);
	p.addPoint(145,217);
	p.addPoint(147,217);
	p.addPoint(147,219);
	p.addPoint(146,219);
	p.addPoint(144,221);
	p.addPoint(143,223);
	p.addPoint(142,226);
	p.addPoint(142,228);
	p.addPoint(136,228);
	p.addPoint(136,227);
	p.addPoint(132,225);
	p.addPoint(131,225);
	p.addPoint(130,228);
	p.addPoint(128,230);
	p.addPoint(128,231);
	p.addPoint(129,232);
	p.addPoint(132,232);
	p.addPoint(132,234);
	p.addPoint(131,234);
	p.addPoint(130,237);
	p.addPoint(130,239);
	p.addPoint(128,239);
	p.addPoint(122,241);
	p.addPoint(121,242);
	p.addPoint(121,244);
	p.addPoint(123,245);
	p.addPoint(126,246);
	p.addPoint(130,248);
	p.addPoint(132,252);
	p.addPoint(134,252);
	p.addPoint(134,251);
	p.addPoint(137,251);
	p.addPoint(137,253);
	p.addPoint(136,253);
	p.addPoint(134,255);
	p.addPoint(134,256);
	p.addPoint(130,254);
	p.addPoint(127,253);
	p.addPoint(125,253);
	p.addPoint(121,257);
	p.addPoint(111,262);
	p.addPoint(111,263);
	p.addPoint(112,264);
	p.addPoint(112,264);
	p.addPoint(114,265);
	p.addPoint(115,265);
	p.addPoint(116,264);
	p.addPoint(118,263);
	p.addPoint(119,262);
	p.addPoint(119,261);
	p.addPoint(120,261);
	p.addPoint(120,262);
	p.addPoint(122,264);
	p.addPoint(124,265);
	p.addPoint(125,266);
	p.addPoint(126,266);
	p.addPoint(128,262);
	p.addPoint(128,260);
	p.addPoint(131,261);
	p.addPoint(134,262);
	p.addPoint(136,263);
	p.addPoint(137,264);
	p.addPoint(139,265);
	p.addPoint(141,265);
	p.addPoint(144,264);
	p.addPoint(144,263);
	p.addPoint(147,263);
	p.addPoint(147,264);
	p.addPoint(150,265);
	p.addPoint(154,266);
	p.addPoint(165,266);
	p.addPoint(167,264);
	p.addPoint(169,263);
	p.addPoint(169,261);
	p.addPoint(165,260);
	p.addPoint(164,260);
	p.addPoint(164,258);
	p.addPoint(165,258);
	p.addPoint(168,255);
	p.addPoint(170,254);
	p.addPoint(172,253);
	p.addPoint(174,251);
	p.addPoint(175,249);
	p.addPoint(175,245);
	p.addPoint(174,243);
	p.addPoint(171,240);
	p.addPoint(166,240);
	p.addPoint(165,241);
	p.addPoint(165,242);
	p.addPoint(164,242);
	p.addPoint(164,241);
	p.addPoint(163,240);
	p.addPoint(162,240);
	p.addPoint(162,239);
	p.addPoint(163,239);
	p.addPoint(164,238);
	p.addPoint(166,237);
	p.addPoint(166,235);
	p.addPoint(165,231);
	p.addPoint(164,224);
	p.addPoint(163,218);
	p.addPoint(160,215);
	p.addPoint(159,212);
	p.addPoint(158,202);
	p.addPoint(157,200);
	p.addPoint(156,198);
	p.addPoint(153,195);
	p.addPoint(150,194);
	p.addPoint(149,194);
	p.addPoint(149,192);
	p.addPoint(150,192);
	p.addPoint(152,191);
	p.addPoint(157,186);
	p.addPoint(158,184);
	p.addPoint(160,182);
	p.addPoint(161,180);
	p.addPoint(162,179);
	p.addPoint(163,177);
	p.addPoint(163,175);
	p.addPoint(161,174);
	p.addPoint(156,173);
	p.addPoint(151,172);
	p.addPoint(149,171);
	p.addPoint(148,171);
	p.addPoint(148,170);
	p.addPoint(149,170);
	p.addPoint(150,168);
	p.addPoint(151,167);
	p.addPoint(153,166);
	p.addPoint(157,165);
	p.addPoint(158,164);
	p.addPoint(158,162);
	p.addPoint(155,161);
	p.addPoint(150,160);
	p.addPoint(147,159);


	return p;	
	}


	static Polygon get_ireland(){
	
	Polygon p = new Polygon();

	p.addPoint(97,201);
	p.addPoint(95,201);
	p.addPoint(93,203);
	p.addPoint(93,204);
	p.addPoint(94,205);
	p.addPoint(95,205);
	p.addPoint(95,208);
	p.addPoint(94,208);
	p.addPoint(92,209);
	p.addPoint(91,210);
	p.addPoint(91,211);
	p.addPoint(92,213);
	p.addPoint(93,214);
	p.addPoint(94,214);
	p.addPoint(94,215);
	p.addPoint(96,215);
	p.addPoint(96,217);
	p.addPoint(95,217);
	p.addPoint(94,218);
	p.addPoint(92,219);
	p.addPoint(89,222);
	p.addPoint(89,224);
	p.addPoint(88,224);
	p.addPoint(87,225);
	p.addPoint(87,226);
	p.addPoint(84,226);
	p.addPoint(84,225);
	p.addPoint(82,225);
	p.addPoint(82,231);
	p.addPoint(83,232);
	p.addPoint(84,232);
	p.addPoint(84,234);
	p.addPoint(88,235);
	p.addPoint(100,235);
	p.addPoint(103,234);
	p.addPoint(103,233);
	p.addPoint(108,233);
	p.addPoint(108,234);
	p.addPoint(112,234);
	p.addPoint(113,232);
	p.addPoint(115,230);
	p.addPoint(116,228);
	p.addPoint(117,227);
	p.addPoint(118,225);
	p.addPoint(119,222);
	p.addPoint(120,218);
	p.addPoint(121,214);
	p.addPoint(121,208);
	p.addPoint(120,208);
	p.addPoint(120,207);
	p.addPoint(115,207);
	p.addPoint(115,208);
	p.addPoint(112,208);
	p.addPoint(112,207);
	p.addPoint(111,205);
	p.addPoint(110,205);
	p.addPoint(110,201);
	p.addPoint(111,201);
	p.addPoint(112,200);
	p.addPoint(114,199);
	p.addPoint(115,198);
	p.addPoint(115,197);
	p.addPoint(113,196);
	p.addPoint(111,195);
	p.addPoint(110,195);
	p.addPoint(109,196);
	p.addPoint(107,197);
	p.addPoint(106,198);
	p.addPoint(106,199);
	p.addPoint(108,201);
	p.addPoint(109,201);
	p.addPoint(109,202);
	p.addPoint(108,202);
	p.addPoint(106,203);
	p.addPoint(106,204);
	p.addPoint(103,204);
	p.addPoint(103,203);
	p.addPoint(97,201);


	return p;	
	}


	static Polygon get_iceland(){
	
	Polygon p = new Polygon();

	p.addPoint(88,23);
	p.addPoint(87,23);
	p.addPoint(87,24);
	p.addPoint(84,24);
	p.addPoint(84,23);
	p.addPoint(82,23);
	p.addPoint(79,26);
	p.addPoint(77,27);
	p.addPoint(77,30);
	p.addPoint(78,31);
	p.addPoint(84,31);
	p.addPoint(84,32);
	p.addPoint(85,32);
	p.addPoint(85,35);
	p.addPoint(84,35);
	p.addPoint(75,37);
	p.addPoint(74,38);
	p.addPoint(74,39);
	p.addPoint(75,40);
	p.addPoint(77,41);
	p.addPoint(78,41);
	p.addPoint(78,49);
	p.addPoint(77,49);
	p.addPoint(73,51);
	p.addPoint(73,52);
	p.addPoint(74,53);
	p.addPoint(80,56);
	p.addPoint(81,58);
	p.addPoint(82,59);
	p.addPoint(83,61);
	p.addPoint(88,66);
	p.addPoint(92,66);
	p.addPoint(92,65);
	p.addPoint(98,65);
	p.addPoint(98,66);
	p.addPoint(100,67);
	p.addPoint(103,67);
	p.addPoint(107,66);
	p.addPoint(107,65);
	p.addPoint(118,65);
	p.addPoint(122,63);
	p.addPoint(124,61);
	p.addPoint(125,59);
	p.addPoint(126,56);
	p.addPoint(126,54);
	p.addPoint(123,51);
	p.addPoint(122,51);
	p.addPoint(124,47);
	p.addPoint(124,44);
	p.addPoint(125,44);
	p.addPoint(125,43);
	p.addPoint(121,43);
	p.addPoint(121,41);
	p.addPoint(120,39);
	p.addPoint(117,39);
	p.addPoint(115,40);
	p.addPoint(115,41);
	p.addPoint(110,41);
	p.addPoint(110,40);
	p.addPoint(109,38);
	p.addPoint(107,36);
	p.addPoint(104,36);
	p.addPoint(104,35);
	p.addPoint(102,35);
	p.addPoint(102,36);
	p.addPoint(99,36);
	p.addPoint(99,35);
	p.addPoint(97,35);
	p.addPoint(96,36);
	p.addPoint(95,38);
	p.addPoint(95,39);
	p.addPoint(93,39);
	p.addPoint(93,38);
	p.addPoint(90,38);
	p.addPoint(90,37);
	p.addPoint(89,37);
	p.addPoint(89,34);
	p.addPoint(90,34);
	p.addPoint(91,32);
	p.addPoint(91,29);
	p.addPoint(90,26);
	p.addPoint(89,24);
	p.addPoint(88,24);
	p.addPoint(88,23);


	return p;	
	}
	

	static Polygon get_kalingrad(){
		Polygon p = new Polygon();

		p.addPoint(327,218);
		p.addPoint(323,218);
		p.addPoint(322,220);
		p.addPoint(320,221);
		p.addPoint(318,222);
		p.addPoint(316,224);
		p.addPoint(315,228);
		p.addPoint(315,229);
		p.addPoint(320,229);
		p.addPoint(320,230);
		p.addPoint(328,230);
		p.addPoint(333,229);
		p.addPoint(337,228);
		p.addPoint(337,220);
		p.addPoint(329,219);
		p.addPoint(327,218);


		return p;		
	}



}
